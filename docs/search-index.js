var searchIndex = new Map(JSON.parse('[\
["gir",{"doc":"","t":"PPKGMNNHNNHHHNNN","n":["CheckGirFile","Config","OptionStr","RunKind","as_str_ref","borrow","borrow_mut","build_config","from","into","main","print_usage","run_check","try_from","try_into","type_id"],"q":[[0,"gir"],[16,"core::option"],[17,"alloc::string"],[18,"core::result"],[19,"getopts"],[20,"core::any"]],"d":["","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","",""],"i":[4,4,0,0,1,4,4,0,4,4,0,0,0,4,4,4],"f":[0,0,0,0,[1,[[3,[2]]]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[6,[4,5]]]],[-1,-1,[]],[-1,-2,[],[]],[[],[[6,[7,5]]]],[[2,8],7],[2,[[6,[7,5]]]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,9,[]]],"c":[],"p":[[10,"OptionStr",0],[1,"str"],[6,"Option",16],[6,"RunKind",0],[5,"String",17],[6,"Result",18],[1,"tuple"],[5,"Options",19],[5,"TypeId",20]],"b":[]}],\
["libgir",{"doc":"","t":"FPPFEPPGCOEONNNNNNNOENNHOONOOONNNNOOOONNCNNNNNNNOOONNNNNNNOCONOONOONOENONOOOOENONONNNNNNNNNNNNCOOFENNCCCCCCOCNOOCCNNNNNNCOONNCCCOCCNHCCOCCCCOCCHCCCCCCCCCNCNNCPFGFFPPFNNOONNNNNNNNNNOOOONNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNOONHHHIFHNNOOONNONNOONOOOOOONNNONHFNNNNNHNNNNNFHNNOONNONONNONOPGPPPPPPNNNNNNNNNNNNNNNNNNOOFNNNNNOONOHONNNNOOHHFNNNNNOONOHONNNNOOFPPFFFPPPPPPFGHNNNNNNNNNNNNNOOONNNNNNNNNNNNNOONNNNNNNNNNNNNNOOOONNNNNNONOOOOOOOONNNNNNNOOONNNNNNOONNNNNNOONNNNNNOOOOOOOOOOOOOOOOOOOFFFHOOOONNNNNNOOOOONNNNNOOOOONOOOOHHOHNNNNNNOOOOONNNNHOONOOOOOOOOOOOONNOONNONNNNNNNNNOOOOFNNNNNNNOONNNNOFFFNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNFNNOONNONNONOONNOONNNOOOSFSFINNNNONNNNOONNNONOOHOOONNNNNNOPPPPPPFGPONNNNOOOOOHNNNNNNNNONNNNNNOONHOONHNNOONNOOONOOONONNNNNNOOPPFGPPPPGPPHNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNHFHNNOONNOOOHNOOOOONNONOOFONNOOONNONNOONOHNNNNPPGPNNNNNNNNNNNNPPPPPPGNNNNNNNNNNNNNNNNNNNFHOONNNNONNNNOONNNNPPPPIFFGPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPGPNNNNNNNNNNNNNNNNNNNFOHNNOOONNONOOONNNOFINNNNNNNNNNNPPPPPFGPFPPFGPHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHONNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNONNNNNHOOHHFFNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNPFPFFFGPHNNNNNNNNNNOONNNNNNNNNNONONNNNNNNNNNNNOONNNNNNOOONONOOONNNNNOOONNNNNONNNNNOOONNNNNFIHNNOONNOONNONOOOOOONNNHNOOOPPPPPPGNNNNNNNNNNNNNNNNOOOKKKKKKMMMMMMHHFPPPGPFPPPPPPFPPGFPPFPPFPGFPPPPPFPPPGPPSSPPFPPPPPPFPFPPSFFPFPPPPPPFPPFGGPFPPFPPPPPPPFPGGPFPPPPPPPPPPFPPPPPNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNOOONONNNNNNNNNNOOOOOOOOOONNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOONNNNOOOOOOOONNNNNNOOONOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNONONNNNNNNNNONNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOONNNONOOOOOONNNNNNNNNNONNOOOONONONNOOOONOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONONOOOOOOOOOOOOOOOONNOHH","n":["Config","DisplayNotBound","Doc","Env","Library","Normal","Sys","WorkMode","analysis","analysis","analysis_run","auto_path","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","check_disable_format","class_hierarchy","class_hierarchy_run","clone","clone_into","codegen_generate","concurrency","config","default","deprecate_by_min_version","disable_format","doc_target_path","eq","equivalent","equivalent","equivalent","external_docs_url","external_libraries","extra_versions","feature_dependencies","filter_version","find_ext_library","fmt","fmt","fmt","fmt","from","from","from","from_str","generate_safety_asserts","girs_dirs","girs_version","into","into","into","is_generate_rust_files","is_normal","is_too_low_version","is_totally_deprecated","lib_version_overrides","library","library","library_full_name","library_name","library_version","main_sys_crate_name","make_backup","min_cfg_version","min_required_version","namespaces","namespaces_run","new","objects","resolve_type_ids","show_statistics","single_version_file","split_build_rs","symbols","symbols_run","sys_crate_import","target_path","to_owned","trust_return_value_nullability","try_from","try_from","try_from","try_into","try_into","try_into","type_","type_id","type_id","type_id","type_status","type_status_sys","update_version","use_gi_docgen","work_mode","Analysis","Parameter","borrow","borrow_mut","bounds","c_type","child_properties","class_builder","class_hierarchy","constants","constants","conversion_type","default","enum_imports","enumerations","enums","ffi_type","find_enum_by_function","find_flag_by_function","find_global_function","find_object_by_function","find_object_by_virtual_method","find_record_by_function","flags","flags","flags_imports","fmt","from","function_parameters","functions","general","global_functions","imports","info_base","into","is_gpointer","namespaces","object","objects","out_parameters","properties","record","record_type","records","ref_mode","return_value","run","rust_type","safety_assertion_mode","signals","signatures","special_functions","supertypes","symbols","trampoline_parameters","trampolines","try_from","try_from_glib","try_into","type_id","types","AsRef","Bound","BoundType","Bounds","CallbackInfo","IsA","NoWrapper","PropertyBound","add_for_parameter","add_parameter","alias","alias","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bound_name","bound_type","callback_modified","callback_type","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","default","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","error_parameters","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","get","get_parameter_bound","get_to_glib_extra","has_alias","into","into","into","into","into","is_empty","iter","iter_lifetimes","need_isa","parameter_name","success_parameters","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_for","type_id","type_id","type_id","type_id","type_id","type_str","type_str","update_imports","implements_c_type","is_mut_ptr","rustify_pointers","ChildProperties","ChildProperty","analyze","borrow","borrow_mut","bounds","child_name","child_type","clone","clone_into","doc_hidden","fmt","from","get_out_ref_mode","getter_name","into","name","nullable","prop_name","set_in_ref_mode","set_params","to_glib_extra","to_owned","try_from","try_into","typ","type_id","analyze","Info","borrow","borrow_mut","fmt","from","into","run","subtypes","supertypes","try_from","try_into","type_id","Info","analyze","borrow","borrow_mut","cfg_condition","deprecated_version","fmt","from","glib_name","into","name","try_from","try_into","typ","type_id","version","Borrow","ConversionType","Direct","Option","Pointer","Result","Scalar","Unknown","borrow","borrow_mut","can_use_to_generate","clone","clone_into","default","eq","equivalent","equivalent","equivalent","fmt","from","into","of","to_owned","try_from","try_into","type_id","err_type","ok_type","Info","borrow","borrow_mut","default","fmt","from","full_name","functions","into","name","new","specials","try_from","try_into","type_","type_id","type_id","visibility","ffi_type","used_ffi_type","Info","borrow","borrow_mut","default","fmt","from","full_name","functions","into","name","new","specials","try_from","try_into","type_","type_id","type_id","visibility","CParameter","IntoRaw","Length","Parameter","Parameters","RustParameter","ToGlibBorrow","ToGlibDirect","ToGlibPointer","ToGlibScalar","ToGlibUnknown","ToSome","Transformation","TransformationType","analyze","analyze_return","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_parameters","c_type","caller_allocates","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","destroy_index","direction","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_parameter","from_return_value","ind_c","ind_c","ind_rust","instance_parameter","into","into","into","into","into","into","is_error","is_to_glib","lib_par","move_","name","name","nullable","ref_mode","rust_parameters","scope","set_to_glib_extra","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","transfer","transformation_type","transformations","try_from","try_from","try_from","try_from","try_from","try_from","try_from_glib","try_from_glib","try_into","try_into","try_into","try_into","try_into","try_into","typ","typ","type_id","type_id","type_id","type_id","type_id","type_id","user_data_index","array_length_name","array_length_type","array_name","explicit_target_type","in_trait","instance_parameter","move_","name","name","name","name","needs_into","nullable","nullable","pointer_cast","ref_mode","to_glib_extra","transfer","AsyncFuture","AsyncTrampoline","Info","analyze","assertion","assertion","async","async_future","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bound_name","bounds","callback_type","callbacks","cfg_condition","clone","clone","clone_into","clone_into","codegen_name","commented","deprecated_version","destroys","doc_hidden","doc_ignore_parameters","doc_link","doc_struct_name","doc_trait_name","error_parameters","ffi_ret","find_function","find_index_to_ignore","finish_func_name","finish_function_name","fmt","fmt","fmt","from","from","from","func_name","generate_doc","glib_name","has_error_parameter","hidden","into","into","into","is_async_finish","is_carray_with_direct_elements","is_method","is_method","is_special","kind","name","name","name","new_name","not_version","ns_id","output_params","outs","parameters","remove_params","ret","should_be_doc_linked","should_docs_be_generated","status","success_parameters","to_owned","to_owned","trampoline","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","type_name","unsafe_","version","visibility","StatusedTypeId","borrow","borrow_mut","clone","clone_into","fmt","from","into","name","status","to_owned","try_from","try_into","type_id","type_id","ImportConditions","Imports","ImportsWithDefault","add","add_defined","add_used_type","add_used_type_with_version","add_used_types","add_with_constraint","add_with_version","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","compare","constraints","default","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","fmt","from","from","from","into","into","into","iter","new","partial_cmp","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","with_defaults","with_defined","InfoBase","borrow","borrow_mut","cfg_condition","concurrency","constructors","default","deprecated_version","fmt","from","full_name","functions","functions","imports","into","methods","name","specials","try_from","try_into","type_id","type_id","version","visibility","INTERNAL","Info","MAIN","Namespace","NsId","borrow","borrow","borrow_mut","borrow_mut","crate_name","fmt","fmt","from","from","glib_ns_id","higher_crate_name","index","into","into","is_glib_crate","main","name","package_names","run","shared_libs","symbol_prefixes","sys_crate_name","try_from","try_from","try_into","try_into","type_id","type_id","versions","Builder","ClassExt","ClassExtManual","Ext","ExtManual","Impl","Info","LocationInObject","VirtualExt","base","borrow","borrow","borrow_mut","borrow_mut","builder_postprocess","builder_properties","c_class_type","c_type","child_properties","class","clone","clone_into","default","deref","eq","equivalent","equivalent","equivalent","final_type","fmt","fmt","from","from","function_location","generate_doc_link_info","generate_trait","get_type","has_action_signals","has_builder_properties","has_constructors","has_functions","has_signals","interface","into","into","is_fundamental","is_interface","need_generate_inherent","need_generate_trait","notify_signals","properties","ref_fn","should_generate_impl_block","signals","signatures","supertypes","to_owned","trait_name","try_from","try_from","try_into","try_into","type_id","type_id","unref_fn","virtual_methods","CheckError","Combined","Info","Mode","None","Normal","Optional","ReturnResult","ThrowFunctionReturnStrategy","Throws","Void","analyze","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","can_as_return","clone","clone","clone_into","clone_into","default","default","default","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","into","into","into","is_empty","iter","mode","params","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","use_function_return_for_result","Property","analyze","borrow","borrow_mut","bounds","deprecated_version","fmt","from","func_name","func_name_alias","get_out_ref_mode","get_property_ref_modes","into","is_get","name","nullable","set_bound","set_in_ref_mode","try_from","try_into","typ","type_id","var_name","version","Info","base","borrow","borrow_mut","boxed_inline","clear_function_expression","copy_into_function_expression","default","deref","derives","fmt","from","glib_get_type","init_function_expression","into","is_boxed","new","try_from","try_into","type_","type_id","AutoBoxed","Boxed","RecordType","Refcounted","borrow","borrow_mut","eq","equivalent","equivalent","equivalent","from","into","of","try_from","try_into","type_id","ByRef","ByRefConst","ByRefFake","ByRefImmut","ByRefMut","None","RefMode","borrow","borrow_mut","clone","clone_into","eq","equivalent","equivalent","equivalent","fmt","from","from_str","into","is_ref","of","to_owned","try_from","try_into","type_id","without_unneeded_mut","Info","analyze","base_tid","bool_return_is_error","borrow","borrow_mut","clone","clone_into","commented","default","fmt","from","into","nullable_return_is_error","parameter","to_owned","try_from","try_into","type_id","Err","Ignored","Mismatch","Ok","Result","RustType","RustTypeBuilder","TypeError","Unimplemented","alter_type","as_str","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","builder","callback_parameters_config","clone","clone","clone_into","clone_into","concurrency","default","direction","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from","from","from","into","into","into","into_used_types","nullable","ref_mode","scope","to_owned","to_owned","try_build","try_build_param","try_from","try_from","try_from","try_from_glib","try_into","try_into","try_into","try_new","type_id","type_id","type_id","used_types","InMainThread","None","NotInitialized","SafetyAssertionMode","Skip","borrow","borrow_mut","clone","clone_into","default","eq","equivalent","equivalent","equivalent","fmt","from","from_str","into","is_none","of","to_owned","try_from","try_into","type_id","Info","action_emit_name","analyze","borrow","borrow_mut","connect_name","deprecated_version","doc_hidden","fmt","from","generate_doc","into","is_detailed","signal_name","trampoline","try_from","try_into","type_id","version","Signature","Signatures","borrow","borrow_mut","fmt","from","has_for_property","has_in_deps","into","new","try_from","try_into","type_id","Compare","Copy","Display","Equal","Free","FunctionInfo","FunctionType","Hash","Infos","Ref","StaticStringify","TraitInfo","Type","Unref","analyze_imports","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","compare","compare","default","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extract","first_parameter_mut","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_str","functions","glib_name","has_trait","into","into","into","into","into","partial_cmp","partial_cmp","to_owned","to_owned","to_owned","to_owned","traits","traits_mut","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_","type_id","type_id","type_id","type_id","type_id","unhide","version","version","analyze","dependencies","Info","Symbol","borrow","borrow","borrow_mut","borrow_mut","by_c_name","by_c_name_mut","by_tid","clone","clone_into","crate_name","default","fmt","fmt","from","from","full_rust_name","into","into","is_rust_prelude","make_trait","make_trait_method","name","owner_name","parent","run","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Borrow","CParameter","None","Parameters","RustParameter","Transformation","TransformationType","TreePath","analyze","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_parameters","c_type","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","conversion_type","default","direction","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_str","get","ind_c","ind_rust","into","into","into","into","into","is_real_gpointer","name","name","name","new","nullable","prepare_transformation","ref_mode","ref_mode","rust_parameters","to_owned","to_owned","to_owned","to_owned","to_owned","transfer","transformation","transformations","try_from","try_from","try_from","try_from","try_from","try_from_glib","try_into","try_into","try_into","try_into","try_into","typ","typ","typ","type_id","type_id","type_id","type_id","type_id","Trampoline","Trampolines","analyze","borrow","borrow_mut","bound_name","bounds","clone","clone_into","concurrency","destroy_index","fmt","from","inhibit","into","is_notify","name","nullable","parameters","ret","scope","to_owned","try_from","try_into","type_error","type_id","type_name","user_data_index","version","Default","NotImplemented","Option","OptionMandatory","Result","ResultInfallible","TryFromGlib","borrow","borrow_mut","clone","clone_into","default","fmt","from","from_parameter","from_return_value","from_type_defaults","into","or_type_defaults","to_owned","try_from","try_into","type_id","err_type","ok_type","ok_type","DerivesCopy","ImplementsDebug","IsExternal","IsIncomplete","IsPtr","IsVolatile","derives_copy","implements_debug","is_external","is_incomplete","is_ptr","is_volatile","check_fmt","format","Alias","Alias","Array","Async","Basic","Basic","Bitfield","Bitfield","Bool","Boolean","CArray","Call","Char","Class","Class","ClassMethod","Concurrency","Constant","Constructor","Container","Custom","Custom","Double","Enumeration","Enumeration","ErrorDomain","Field","Filename","FixedArray","Float","Forever","Full","Function","Function","Function","Function","FunctionKind","Global","HashTable","INTERNAL_NAMESPACE","INTERNAL_NAMESPACE_NAME","In","InOut","Infallible","Int","Int16","Int32","Int64","Int8","IntPtr","Interface","Interface","Library","List","Long","MAIN_NAMESPACE","Mandatory","Member","Method","Namespace","None","None","None","None","None","Notified","Nullable","OsString","Out","Parameter","ParameterDirection","ParameterScope","Pointer","Property","PtrArray","Quark","Record","Record","Return","SList","SSize","Send","SendSync","Short","Signal","Size","Transfer","Type","Type","TypeId","UChar","UInt","UInt16","UInt32","UInt64","UInt8","UIntPtr","ULong","UShort","UniChar","Union","Union","Unsupported","Utf8","VarArgs","VirtualMethod","add_constant","add_function","add_glib_priority","add_namespace","add_type","array_length","array_length","bits","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_array","c_class_type","c_class_type","c_identifier","c_identifier","c_identifier","c_identifier","c_includes","c_type","c_type","c_type","c_type","c_type","c_type","c_type","c_type","c_type","c_type","caller_allocates","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","closure","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","constants","construct","construct_only","container","conversion_type","default","default","default","default","default","default","default","default","default","default","deprecated_version","deprecated_version","deprecated_version","deprecated_version","deprecated_version","deprecated_version","deprecated_version","deprecated_version","deprecated_version","deprecated_version","deref","deref","deref","deref_mut","derives_copy","derives_copy","derives_copy","derives_copy","derives_copy","derives_copy","derives_copy","derives_copy","derives_copy","destroy","direction","disguised","doc","doc","doc","doc","doc","doc","doc","doc","doc","doc","doc","doc","doc","doc","doc","doc_deprecated","doc_deprecated","doc_deprecated","doc_deprecated","doc_deprecated","doc_deprecated","doc_deprecated","doc_deprecated","doc_deprecated","doc_deprecated","doc_deprecated","doc_deprecated","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","error_domain","fields","fields","fields","final_type","find_c_array","find_namespace","find_or_stub_type","find_type","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_str","from_str","from_str","from_str","from_str","full_name","function","functions","functions","functions","functions","functions","functions","functions","functions","get_deprecated_version","get_glib_name","get_inner_type","get_name","glib_get_type","glib_get_type","glib_get_type","glib_get_type","glib_get_type","glib_get_type","glib_name_index","gtype_struct_for","has_copy","has_destroy","has_free","has_ref","has_unref","hash","id","identifier_prefixes","implements","implements_debug","index","index","instance_parameter","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_abstract","is_abstract","is_action","is_async","is_basic","is_basic_type","is_basic_type","is_bitfield","is_call","is_class","is_crate","is_detailed","is_enumeration","is_error","is_external","is_external","is_external","is_external","is_external","is_final_type","is_forever","is_function","is_fundamental","is_fundamental","is_glib_crate","is_in","is_incomplete","is_incomplete","is_incomplete","is_incomplete","is_incomplete","is_incomplete","is_incomplete","is_incomplete","is_incomplete","is_interface","is_none","is_out","is_ptr","is_ptr","is_volatile","kind","members","members","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","namespace","namespace_mut","namespace_types","namespaces","new","ns_id","nullable","package_names","parameters","parameters","parent","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pointer","postprocessing","preprocessing","prerequisites","private","properties","properties","read_file","readable","record","ref_fn","register_version","requires_conversion","ret","ret","scope","shared_library","show_non_bound_types","signals","signals","status","symbol_prefix","symbol_prefix","symbol_prefix","symbol_prefix","symbol_prefix","symbol_prefix","symbol_prefixes","target_c_type","throws","tid_bool","tid_c_bool","tid_filename","tid_none","tid_os_string","tid_uint32","tid_utf8","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","transfer","transfer","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","typ","typ","typ","typ","typ","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_mut","type_struct","type_struct","types","types","union","unref_fn","value","value","version","version","version","version","version","version","version","version","version","version","versions","virtual_methods","virtual_methods","visit_functions_mut","visit_functions_mut","writable","apply_config","check_function_real_version"],"q":[[0,"libgir"],[97,"libgir::analysis"],[158,"libgir::analysis::bounds"],[253,"libgir::analysis::c_type"],[256,"libgir::analysis::child_properties"],[283,"libgir::analysis::class_builder"],[284,"libgir::analysis::class_hierarchy"],[296,"libgir::analysis::constants"],[312,"libgir::analysis::conversion_type"],[338,"libgir::analysis::conversion_type::ConversionType"],[340,"libgir::analysis::enums"],[358,"libgir::analysis::ffi_type"],[360,"libgir::analysis::flags"],[378,"libgir::analysis::function_parameters"],[491,"libgir::analysis::function_parameters::TransformationType"],[509,"libgir::analysis::functions"],[598,"libgir::analysis::general"],[613,"libgir::analysis::imports"],[670,"libgir::analysis::info_base"],[694,"libgir::analysis::namespaces"],[728,"libgir::analysis::object"],[794,"libgir::analysis::out_parameters"],[853,"libgir::analysis::properties"],[877,"libgir::analysis::record"],[898,"libgir::analysis::record_type"],[914,"libgir::analysis::ref_mode"],[940,"libgir::analysis::return_value"],[959,"libgir::analysis::rust_type"],[1023,"libgir::analysis::safety_assertion_mode"],[1047,"libgir::analysis::signals"],[1066,"libgir::analysis::signatures"],[1079,"libgir::analysis::special_functions"],[1173,"libgir::analysis::supertypes"],[1175,"libgir::analysis::symbols"],[1209,"libgir::analysis::trampoline_parameters"],[1299,"libgir::analysis::trampolines"],[1328,"libgir::analysis::try_from_glib"],[1351,"libgir::analysis::try_from_glib::TryFromGlib"],[1354,"libgir::analysis::types"],[1366,"libgir::fmt"],[1368,"libgir::library"],[2137,"libgir::update_version"],[2139,"core::option"],[2140,"core::fmt"],[2141,"core::fmt"],[2142,"alloc::string"],[2143,"core::convert"],[2144,"core::any"],[2145,"core::ops::function"],[2146,"core::marker"],[2147,"core::slice::iter"],[2148,"alloc::vec"],[2149,"core::iter::traits::iterator"],[2150,"alloc::boxed"],[2151,"core::borrow"],[2152,"core::iter::traits::collect"],[2153,"core::cmp"],[2154,"alloc::vec::into_iter"],[2155,"alloc::borrow"],[2156,"core::ops::function"],[2157,"std::path"],[2158,"core::hash"],[2159,"core::convert"]],"d":["","","","","","","","","","","","Path where files generated in normal and sys mode","","","","","","","","","","","","","","","","","","","","","","","An url that will be inserted into the docs as link that …","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Helper to get the ffi crate import","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Bound does not have an alias when <code>param: impl type_str</code> is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","Coded without conversion.","Type implementing TryFromGlib&lt;Error=GlibNoneError&gt;.","Coded with from_glib_xxx.","Type implementing TryFromGlib where Err is neither …","Coded with from_glib.","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Index of the destroy notification parameter associated …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Index of the user data parameter associated with the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether the function can’t be generated","","","","","","","","","","","","","Given async function name tries to guess the name of …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Whether the function is hidden (an implementation detail) …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","In order to generate docs links we need to know in which …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","Provides assistance in generating use declarations.","","Declares that name should be available through its last …","Declares that <code>name</code> is defined in scope","Declares that name should be available through its full …","Declares that name should be available through its full …","","Declares that name should be available through its last …","Declares that name should be available through its last …","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","TODO: return iterator","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","The location of an item within the object","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the location of the function within this object","Generate doc name based on function location within this …","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Specific to fundamental types","Whether we should generate an impl block for this object …","","","","","","","","","","","","Specific to fundamental types","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","Boxed record that use g_boxed_copy, g_boxed_free. Must …","Boxed record with custom copy/free functions","","Referencecounted record","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","Contains the error value","","","Contains the success value","","A <code>RustType</code> definition and its associated types to be <code>use</code>d.","","","","","","","","","","","","Create a <code>RustTypeBuilder</code> which allows specifying additional","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Try building the <code>RustType</code> with no specific additional …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Convert this symbol into a trait","Convert this into a method of a trait","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","This field is used to give the type name when generating …","It’s used to group callbacks","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","Checks if given type derives Copy trait.","Checks if given type implements Debug trait.","Checks if type is external aka opaque type.","Checks if given type is incomplete, i.e., its size is …","Checks if given type is some kind of pointer.","Checks if given type has volatile qualifier.","","","","","","","Check if <code>cargo fmt</code> available","Run <code>cargo fmt</code> on path","","","","Used for the duration of the asynchronous call.","","","","","","","","Used only for the duration of the call.","","","","","","","","","","","","","","","","","","","Forever scope","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parameter is not of callback type.","","","Used until notified with associated destroy notify …","","","","","","Annotation describing lifetime requirements / guarantees …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","C headers, relative to include directories provided by …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Index of the user data parameter associated with the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Index of the destroy notification parameter associated …","","A ‘disguised’ record is one where the c:type is a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","If the type is an Alias containing a basic, it’ll return …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Types from a single namespace in alphabetical order.","","","","","","","","","","","","","","","","","","","A ‘pointer’ record is one where the c:type is a …","","","","","","","","","","Specific to fundamental types","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,3,3,0,0,3,3,0,0,4,0,1,1,3,4,1,3,4,1,4,0,3,3,0,1,4,3,1,1,1,3,3,3,3,1,1,1,1,1,1,0,1,3,4,1,3,4,3,1,1,1,1,3,4,3,3,4,4,1,0,4,1,1,1,4,1,1,1,4,0,1,1,1,1,1,1,4,0,4,1,3,1,1,3,4,1,3,4,4,1,3,4,4,4,0,1,1,0,0,20,20,0,0,0,0,0,0,20,0,20,20,20,0,0,20,20,20,20,20,20,0,20,20,20,20,0,0,0,20,0,0,20,0,0,0,20,0,0,0,0,20,0,0,0,0,0,0,0,0,0,0,0,0,20,0,20,20,0,34,0,0,0,0,34,34,0,29,29,35,36,34,35,29,33,36,34,35,29,33,36,33,35,35,33,34,35,29,33,36,34,35,29,33,36,29,34,35,34,34,34,35,35,35,33,34,35,29,33,36,34,35,29,33,36,36,29,29,34,34,35,29,33,36,29,29,29,34,35,33,34,35,29,33,36,34,35,29,33,36,34,35,29,33,36,29,34,35,29,33,36,35,36,29,0,0,0,0,0,0,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,0,0,45,45,45,45,45,0,45,45,45,45,45,0,0,48,48,48,48,48,48,48,48,48,48,48,48,48,48,51,0,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,135,135,0,21,21,21,21,21,21,21,21,21,0,21,21,21,21,21,21,21,0,0,0,26,26,26,26,26,26,26,26,26,0,26,26,26,26,26,26,26,0,59,59,0,0,0,59,59,59,59,59,59,0,0,0,56,57,58,31,59,60,56,57,58,31,59,60,56,56,31,31,57,58,31,59,60,56,57,58,31,59,60,56,56,31,31,57,58,31,59,60,56,57,58,31,59,60,56,57,57,58,60,60,31,57,58,31,59,60,56,31,59,57,31,58,31,31,31,56,31,59,57,58,31,59,60,56,31,60,56,57,58,31,59,60,56,57,31,57,58,31,59,60,56,58,31,57,58,31,59,60,56,31,136,136,136,137,137,137,137,138,139,137,140,139,139,137,137,137,137,137,0,0,0,0,63,22,22,22,62,63,22,62,63,22,62,22,62,22,22,62,63,62,63,22,22,22,22,22,22,22,22,22,63,62,0,0,62,0,62,63,22,62,63,22,22,22,22,62,22,62,63,22,22,0,62,63,22,22,62,63,22,22,22,22,62,22,22,22,22,22,22,22,63,62,63,22,62,63,22,62,63,22,62,63,22,22,22,22,22,0,67,67,67,67,67,67,67,67,67,67,67,67,67,67,0,0,0,39,39,39,39,39,39,39,70,39,68,70,39,68,39,68,39,68,68,68,68,39,68,70,70,70,68,68,68,68,39,68,70,39,68,70,39,68,39,39,68,39,68,70,39,68,70,39,68,70,39,68,68,39,39,0,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,0,0,0,0,0,7,73,7,73,7,7,73,7,73,73,7,73,7,73,73,73,7,7,0,7,7,7,7,73,7,73,7,73,7,74,74,74,74,74,74,0,0,74,27,74,27,74,27,27,27,27,27,27,0,74,74,27,27,74,74,74,74,27,74,27,74,27,27,27,27,27,27,0,27,27,27,0,74,27,27,27,27,27,27,27,27,27,27,27,27,74,27,74,27,74,27,74,27,27,27,78,79,0,0,79,79,79,78,0,79,78,0,78,79,77,78,79,77,0,78,79,78,79,78,79,77,78,79,78,78,78,79,79,79,78,79,77,78,79,77,78,79,77,77,77,77,77,78,79,78,79,77,78,79,77,78,79,77,0,0,0,43,43,43,43,43,43,43,43,43,0,43,43,43,43,43,43,43,43,43,43,43,43,0,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,0,28,28,28,28,84,84,0,84,84,84,84,84,84,84,84,84,84,84,84,84,81,81,81,81,81,81,0,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,0,0,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,53,89,89,53,0,0,0,0,89,86,86,88,89,86,88,89,86,86,88,89,86,89,86,88,86,88,89,86,89,89,89,86,86,86,89,86,88,89,86,86,86,88,89,86,86,88,88,88,89,86,88,88,88,89,86,88,88,89,86,86,88,89,86,86,94,94,94,0,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,0,80,0,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,0,0,96,96,96,96,96,96,96,96,96,96,96,98,98,98,98,98,0,0,98,0,98,100,0,0,98,0,98,99,100,101,97,98,99,100,101,97,98,99,100,101,98,99,100,101,98,100,98,100,97,98,100,98,98,98,100,100,100,0,99,98,99,100,101,97,98,99,100,101,97,98,97,99,97,98,99,100,101,97,98,100,98,99,100,101,97,97,98,99,100,101,97,98,99,100,101,97,101,98,99,100,101,97,0,99,101,0,0,0,0,104,103,104,103,103,103,103,104,104,104,104,104,103,104,103,104,104,103,104,104,104,104,104,104,0,104,104,103,104,103,104,103,109,0,109,0,0,0,0,109,0,106,107,108,105,109,106,107,108,105,109,105,107,106,107,108,105,109,106,107,108,105,109,108,105,106,106,107,108,105,109,106,107,108,105,109,109,105,108,108,106,107,108,105,109,107,106,107,108,105,106,105,106,108,105,106,107,108,105,109,108,108,105,106,107,108,105,109,106,106,107,108,105,109,106,107,108,106,107,108,105,109,0,0,0,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,0,111,111,111,111,93,93,93,93,93,93,0,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,141,141,142,0,0,0,0,0,0,112,113,114,115,116,117,0,0,0,18,18,92,0,18,0,18,123,123,18,92,123,0,18,122,0,0,122,110,0,18,123,0,18,0,0,123,18,123,92,110,0,122,132,18,0,122,18,0,0,85,85,0,123,123,123,123,123,123,0,18,0,18,123,0,0,0,122,0,110,85,92,32,123,92,0,123,85,0,0,0,123,0,18,132,0,18,85,18,123,32,32,123,0,123,0,0,123,0,123,123,123,123,123,123,123,123,123,123,0,18,123,123,123,122,16,16,16,16,16,129,55,129,110,85,92,82,120,121,122,32,123,17,124,49,131,132,52,54,83,129,125,42,55,30,95,126,127,128,18,130,16,110,85,92,82,120,121,122,32,123,17,124,49,131,132,52,54,83,129,125,42,55,30,95,126,127,128,18,130,16,18,126,127,124,49,131,30,130,49,52,54,83,129,125,42,55,126,127,55,110,85,92,82,120,121,122,32,123,17,55,110,85,92,82,120,121,122,32,123,17,55,55,17,124,52,54,83,125,30,126,127,128,17,124,52,54,83,125,30,126,127,128,130,42,42,18,128,85,92,32,17,83,129,125,126,127,130,49,131,52,54,83,42,30,95,126,127,82,120,121,82,123,17,124,83,129,125,30,127,18,55,55,83,124,49,131,52,54,83,129,125,42,55,30,95,126,127,130,124,49,131,52,54,83,42,30,95,126,127,130,110,85,92,82,120,121,122,32,123,17,124,52,54,83,125,30,126,127,128,18,110,110,110,85,85,85,92,92,92,82,82,82,120,120,120,121,121,121,122,122,122,32,32,32,123,123,123,17,17,17,124,124,124,52,52,52,54,54,54,83,83,83,125,125,125,30,30,30,126,126,126,127,127,127,128,128,128,18,18,18,52,83,125,127,127,18,16,16,16,110,85,92,82,120,121,122,32,123,17,124,49,131,132,52,54,83,129,125,42,55,30,95,126,127,128,18,18,130,16,110,85,92,82,120,121,122,32,123,17,124,49,131,132,52,54,83,129,125,42,55,30,95,126,127,128,18,130,16,110,85,92,122,32,17,18,18,52,54,83,125,126,127,130,18,18,18,18,52,54,83,125,126,127,130,83,83,83,83,83,83,17,17,130,127,129,130,16,55,110,85,92,82,120,121,122,32,123,17,124,49,131,132,52,54,83,129,125,42,55,30,95,126,127,128,18,130,16,18,127,95,92,18,17,18,18,92,18,16,95,18,55,124,83,125,127,18,18,92,18,18,127,16,85,123,17,124,83,129,125,30,127,18,18,92,85,124,129,129,30,52,54,124,49,131,52,54,83,129,125,42,55,30,95,126,127,128,130,16,16,16,16,16,17,55,130,30,95,127,17,124,52,54,83,125,30,126,127,128,83,16,16,126,129,126,127,16,42,18,127,16,123,30,95,55,130,16,126,127,131,52,54,83,125,126,127,130,124,30,17,17,17,17,17,17,17,110,85,92,82,120,121,122,32,123,17,55,18,42,55,110,85,92,82,120,121,122,32,123,17,124,49,131,132,52,54,83,129,125,42,55,30,95,126,127,128,18,130,16,110,85,92,82,120,121,122,32,123,17,124,49,131,132,52,54,83,129,125,42,55,30,95,126,127,128,18,130,16,124,49,129,42,55,16,110,85,92,82,120,121,122,32,123,17,124,49,131,132,52,54,83,129,125,42,55,30,95,126,127,128,18,130,16,16,126,127,16,130,18,127,49,131,49,131,52,54,83,42,30,95,126,127,130,126,127,18,130,42,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,2],0,0,[3,3],[[-1,-2],2,[],[]],[4,2],0,0,[[],3],0,0,0,[[3,3],5],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],0,0,0,0,[[1,[6,[0]]],[[6,[0]]]],[[1,7],[[6,[0]]]],0,[[1,8],9],[[3,8],9],[[4,8],9],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[10,[[11,[3,-1]]],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[3,5],[3,5],[[4,[6,[12]],[6,[0]]],5],[[4,[6,[12]],[6,[0]]],5],0,0,0,[1,13],0,0,[4,10],0,0,[[1,4,[6,[12]]],[[6,[0]]]],0,0,[[-1,-2,[14,[13]],-1,-1,-1,-1,5,5,5],[[11,[1,13]]],[[15,[[6,[10]]]]],[[15,[[6,[3]]]]]],0,[[1,16],2],0,0,0,0,0,[[4,17],13],0,[-1,-2,[],[]],0,[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[[4,17],18],[-1,19,[]],[-1,19,[]],[-1,19,[]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,[[],20],0,0,0,0,[[20,4,-1,-2],[[6,[[2,[21,22]]]]],[[24,[21],[[23,[5]]]],25],[[24,[22],[[23,[5]]]],25]],[[20,4,-1,-2],[[6,[[2,[26,22]]]]],[[24,[26],[[23,[5]]]],25],[[24,[22],[[23,[5]]]],25]],[[20,4,-1],[[6,[22]]],[[24,[22],[[23,[5]]]],25]],[[20,4,-1,-2],[[6,[[2,[27,22]]]]],[[24,[27],[[23,[5]]]],25],[[24,[22],[[23,[5]]]],25]],[[20,4,-1,-2],[[6,[[2,[27,22]]]]],[[24,[27],[[23,[5]]]],25],[[24,[22],[[23,[5]]]],25]],[[20,4,-1,-2],[[6,[[2,[28,22]]]]],[[24,[28],[[23,[5]]]],25],[[24,[22],[[23,[5]]]],25]],0,0,0,[[20,8],9],[-1,-1,[]],0,0,0,0,0,0,[-1,-2,[],[]],[10,5],0,0,0,0,0,0,0,0,0,0,[4,2],0,0,0,0,0,0,0,0,0,[-1,[[11,[-2]]],[],[]],0,[-1,[[11,[-2]]],[],[]],[-1,19,[]],0,0,0,0,0,0,0,0,0,[[29,4,30,31,5,32,[14,[0]]],[[2,[[6,[13]],[6,[33]]]]]],[[29,10,10,34,5],2],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[34,34],[35,35],[29,29],[33,33],[36,36],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],29],[[34,34],5],[[35,35],5],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],0,[[34,8],9],[[35,8],9],[[29,8],9],[[33,8],9],[[36,8],9],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[4,17],[[6,[36]]]],[[29,10],[[6,[35]]]],[[34,5,5,5],13],[34,5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[29,5],[29,[[37,[35]]]],[29,[[37,[38]]]],[34,5],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[[4,17],[[6,[34]]]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],0,0,[[29,39],2],[[4,17,10],5],[10,5],[10,[[2,[13,13]]]],0,0,[[4,[6,[0]],17,39],40],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[41,41],[[-1,-2],2,[],[]],0,[[41,8],9],[-1,-1,[]],0,0,[-1,-2,[],[]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],0,[-1,19,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[45,8],9],[-1,-1,[]],[-1,-2,[],[]],[16,45],[[45,17],[[47,[46]]]],[[45,17],[[14,[17]]]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,19,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[48,8],9],[-1,-1,[]],0,[-1,-2,[],[]],0,[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],0,[-1,19,[]],0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[51,5],[51,51],[[-1,-2],2,[],[]],[[],51],[[51,51],5],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[51,8],9],[-1,-1,[]],[-1,-2,[],[]],[[4,17],51],[-1,-2,[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,19,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[],21],[[21,8],9],[-1,-1,[]],0,0,[-1,-2,[],[]],0,0,0,[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[[21,16],52],[-1,19,[]],0,0,[[4,17,10],53],[[4,17,10],[[6,[13]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[],26],[[26,8],9],[-1,-1,[]],0,0,[-1,-2,[],[]],0,0,0,[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[[26,16],54],[-1,19,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[4,[14,[55]],[14,[0]],5,5,5],56],[[56,4,[6,[57]]],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[57,57],[58,58],[31,31],[59,59],[60,60],[56,56],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],56],0,0,[[57,8],9],[[58,8],9],[[31,8],9],[[59,8],9],[[60,8],9],[[56,8],9],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[4,55,[14,[0]]],57],[[4,55,[14,[0]]],57],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[59,5],0,0,0,0,0,0,0,0,[[59,10],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],0,0,[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],0,0,[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[62,62],[63,63],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[22,10],0,0,0,0,0,[[22,[6,[10]],[6,[10]],5],13],0,0,0,0,[[4,10],[[6,[30]]]],[[-1,[6,[55]]],[[6,[64]]],[[66,[],[[65,[55]]]]]],0,[10,13],[[62,8],9],[[63,8],9],[[22,8],9],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[22,4],5],[[4,17],5],0,0,[22,5],0,0,0,0,0,0,0,0,0,0,0,0,[[22,4],5],[[22,4],5],0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[67,67],[[-1,-2],2,[],[]],[[67,8],9],[-1,-1,[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,19,[]],0,0,0,0,[[39,10],2],[[39,10],2],[[39,10],2],[[39,10,[6,[0]]],2],[[39,[14,[13]]],2],[[39,10,[6,[0]],[6,[10]]],2],[[39,10,[6,[0]]],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[39,39],[68,68],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[68,68],69],[[-1,-2],69,[],[]],0,[[],39],[[],68],[70,-1,[]],[70,-1,[]],[70,2],[[68,68],5],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[39,8],9],[[68,8],9],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[39,[[71,[[2,[13,68]]]]]],[16,39],[[68,68],[[6,[69]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],0,[[39,[6,[0]],[6,[13]]],70],[[16,10],39],0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,[72,[[44,[22]]]],[[],72],0,[[72,8],9],[-1,-1,[]],0,[72,[[44,[22]]]],0,0,[-1,-2,[],[]],[72,[[44,[22]]]],0,0,[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,19,[]],0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[7,8],9],[[73,8],9],[-1,-1,[]],[-1,-1,[]],0,0,[[73,12],7],[-1,-2,[],[]],[-1,-2,[],[]],0,[73,7],0,0,[16,73],0,0,0,[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,19,[]],[-1,19,[]],0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[74,74],[[-1,-2],2,[],[]],[[],27],[27,72],[[74,74],5],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],0,[[74,8],9],[[27,8],9],[-1,-1,[]],[-1,-1,[]],[[27,22],74],[[27,22],[[2,[[75,[10]],[75,[10]]]]]],0,0,[27,5],[[[14,[[2,[[44,[43]],17]]]]],5],0,0,[27,5],0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,[27,5],[27,5],0,0,0,[27,5],0,0,0,[-1,-2,[],[]],0,[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,19,[]],[-1,19,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[4,30,[14,[31]],76,[14,[0]]],[[2,[77,5]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[4,55],5],[78,78],[79,79],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],78],[[],79],[[],77],[[78,78],5],[[79,79],5],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[78,8],9],[[79,8],9],[[77,8],9],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[77,5],[77,[[37,[57]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[[4,17,10,[14,[0]]],5],0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[43,8],9],[-1,-1,[]],0,0,0,[[4,42],[[2,[81,81,82]]]],[-1,-2,[],[]],0,0,0,0,0,[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],0,[-1,19,[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[],28],[28,72],0,[[28,8],9],[-1,-1,[]],0,0,[-1,-2,[],[]],0,0,[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[[28,16],83],[-1,19,[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[84,84],5],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[-1,-1,[]],[-1,-2,[],[]],[83,84],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,19,[]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[81,81],[[-1,-2],2,[],[]],[[81,81],5],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[81,8],9],[-1,-1,[]],[10,[[11,[81,-1]]],[]],[-1,-2,[],[]],[81,5],[[4,17,85],81],[-1,-2,[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,19,[]],[[4,55,5,5],81],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[76,76],[[-1,-2],2,[],[]],0,[[],76],[[76,8],9],[-1,-1,[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,19,[]],0,0,0,0,0,0,0,0,0,[[86,-1],86,[[87,[13],[[23,[13]]]]]],[86,10],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[4,17],88],[[88,[14,[0]]],88],[89,89],[86,86],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[88,32],88],[[],86],[[88,85],88],[[89,89],5],[[86,86],5],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[89,8],9],[[86,8],9],[-1,-1,[]],[-1,-1,[]],[-1,86,90],[91,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[86,[[44,[13]]]],[[88,82],88],[[88,81],88],[[88,92],88],[-1,-2,[],[]],[-1,-2,[],[]],[88,53],[88,53],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[[88,93],88],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[[4,17],53],[-1,19,[]],[-1,19,[]],[-1,19,[]],[86,[[44,[13]]]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[94,94],[[-1,-2],2,[],[]],[[],94],[[94,94],5],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[94,8],9],[-1,-1,[]],[10,[[11,[94,13]]]],[-1,-2,[],[]],[94,5],[[4,5,56],94],[-1,-2,[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,19,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[80,8],9],[-1,-1,[]],0,[-1,-2,[],[]],0,0,0,[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,19,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[96,8],9],[-1,-1,[]],[[4,10,5,17,61,[14,[17]]],[[2,[5,[6,[0]]]]]],[[96,4,10,[14,[17]]],[[2,[5,[6,[0]]]]]],[-1,-2,[],[]],[30,96],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,19,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[97,39],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[98,98],[99,99],[100,100],[101,101],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[98,98],69],[[100,100],69],[[-1,-2],69,[],[]],[[-1,-2],69,[],[]],[[],97],[[98,98],5],[[100,100],5],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],0,0,[[98,8],9],[[99,8],9],[[100,8],9],[[101,8],9],[[97,8],9],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[10,[[11,[98,-1]]],[]],[97,[[102,[13,101]]]],0,[[97,98],5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[98,98],[[6,[69]]]],[[100,100],[[6,[69]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[97,[[102,[98,99]]]],[97,[[102,[98,99]]]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],0,[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[[[14,[22]],97,98],2],0,0,[[4,17,[6,[0]],39,5],[[44,[67]]]],[[4,17],[[44,[17]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[103,10],[[6,[104]]]],[[103,10],[[6,[104]]]],[[103,17],[[6,[104]]]],[104,104],[[-1,-2],2,[],[]],[104,[[6,[10]]]],[[],104],[[104,8],9],[[103,8],9],[-1,-1,[]],[-1,-1,[]],[104,13],[-1,-2,[],[]],[-1,-2,[],[]],[104,5],[[104,10],2],[[104,10],2],[104,10],[104,[[6,[10]]]],[104,13],[[16,73],103],[-1,-2,[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,19,[]],[-1,19,[]],0,0,0,0,0,0,0,0,[[4,[14,[55]],17,[14,[0]],[6,[[44,[0]]]]],105],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[106,106],[107,107],[108,108],[105,105],[109,109],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],0,[[],105],0,[[106,8],9],[[107,8],9],[[108,8],9],[[105,8],9],[[109,8],9],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[10,[[11,[109,-1]]],[]],[[105,64],[[6,[108]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[107,4],5],0,0,0,[64,105],0,[[105,4,17,13,13,85,110,82,81,51],108],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],0,[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],0,0,0,[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,[111,111],[[-1,-2],2,[],[]],0,0,[[111,8],9],[-1,-1,[]],0,[-1,-2,[],[]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[[4,55],[[6,[10]]]],[-1,19,[]],0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[93,93],[[-1,-2],2,[],[]],[[],93],[[93,8],9],[-1,-1,[]],[[4,17,[14,[0]]],93],[[4,17,[14,[0]]],93],[[4,17],93],[-1,-2,[],[]],[[93,4,17],[[75,[93]]]],[-1,-2,[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,19,[]],0,0,0,0,0,0,0,0,0,[[112,16],5],[[113,16],5],[[114,16],5],[[115,16],5],[116,5],[117,5],[[],5],[118,2],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[16,119,49],2],[[16,119,30],2],[[16,3],2],[[16,10],119],[[16,119,10,18],17],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[16,17,[6,[119]],[6,[13]]],17],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[110,110],[85,85],[92,92],[82,82],[120,120],[121,121],[122,122],[32,32],[123,123],[17,17],[55,55],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],0,[[17,17],69],[[124,124],69],[[52,52],69],[[54,54],69],[[83,83],69],[[125,125],69],[[30,30],69],[[126,126],69],[[127,127],69],[[128,128],69],[[-1,-2],69,[],[]],[[-1,-2],69,[],[]],[[-1,-2],69,[],[]],[[-1,-2],69,[],[]],[[-1,-2],69,[],[]],[[-1,-2],69,[],[]],[[-1,-2],69,[],[]],[[-1,-2],69,[],[]],[[-1,-2],69,[],[]],[[-1,-2],69,[],[]],0,0,0,[[16,10,[44,[17]]],[[6,[17]]]],0,[[],85],[[],92],[[],32],[[],17],[[],83],[[],129],[[],125],[[],126],[[],127],[[],130],0,0,0,0,0,0,0,0,0,0,[82,5],[120,5],[121,5],[82,5],[[-1,16],5,[]],[[-1,16],5,[]],[[-1,16],5,[]],[[-1,16],5,[]],[[-1,16],5,[]],[[-1,16],5,[]],[[-1,16],5,[]],[[-1,16],5,[]],[[-1,16],5,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[110,110],5],[[85,85],5],[[92,92],5],[[82,82],5],[[120,120],5],[[121,121],5],[[122,122],5],[[32,32],5],[[123,123],5],[[17,17],5],[[124,124],5],[[52,52],5],[[54,54],5],[[83,83],5],[[125,125],5],[[30,30],5],[[126,126],5],[[127,127],5],[[128,128],5],[[18,18],5],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],0,0,0,0,0,[[16,17,[6,[119]]],17],[[16,10],[[6,[119]]]],[[16,119,10],17],[[16,119,10],[[6,[17]]]],[[110,8],9],[[85,8],9],[[92,8],9],[[82,8],9],[[120,8],9],[[121,8],9],[[122,8],9],[[32,8],9],[[123,8],9],[[17,8],9],[[124,8],9],[[49,8],9],[[131,8],9],[[132,8],9],[[52,8],9],[[54,8],9],[[83,8],9],[[129,8],9],[[125,8],9],[[42,8],9],[[55,8],9],[[30,8],9],[[95,8],9],[[126,8],9],[[127,8],9],[[128,8],9],[[18,8],9],[[18,8],9],[[130,8],9],[[16,8],9],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[10,[[11,[110,13]]]],[10,[[11,[85,13]]]],[10,[[11,[92,13]]]],[10,[[11,[122,13]]]],[10,[[11,[32,13]]]],[[17,16],13],[[16,30],17],[18,[[14,[30]]]],0,0,0,0,0,0,0,[18,[[6,[0]]]],[18,[[6,[10]]]],[[18,4],[[6,[[2,[18,119]]]]]],[18,13],0,0,0,0,0,0,0,0,[83,5],[83,5],[83,5],[83,5],[83,5],[[17,-1],2,133],0,0,0,[[129,16],5],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[18,5],0,0,[92,5],[18,5],[[17,4],5],[[18,4],5],[18,5],[92,5],[18,5],[[16,10],5],0,[18,5],0,[[124,16],5],[[83,16],5],[[125,16],5],[[127,16],5],[[18,16],5],[18,5],[92,5],[18,5],[18,5],0,[16,5],[85,5],[[123,16],5],[[17,16],5],[[124,16],5],[[83,16],5],[[129,16],5],[[125,16],5],[[30,16],5],[[127,16],5],[[18,16],5],[18,5],[92,5],[85,5],[124,5],[129,5],[129,5],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[16,119],130],[[16,119],130],[[16,119],[[47,[46]]]],0,[10,16],0,0,0,0,0,0,[[17,17],[[6,[69]]]],[[124,124],[[6,[69]]]],[[52,52],[[6,[69]]]],[[54,54],[[6,[69]]]],[[83,83],[[6,[69]]]],[[125,125],[[6,[69]]]],[[30,30],[[6,[69]]]],[[126,126],[[6,[69]]]],[[127,127],[[6,[69]]]],[[128,128],[[6,[69]]]],0,[[16,1],2],[[16,3],2],0,0,0,0,[[16,[14,[-1]],[44,[13]]],[[11,[2,13]]],[[134,[118]]]],0,[[16,83,119],17],0,0,[123,5],0,0,0,0,[[16,4],2],0,0,0,0,0,0,0,0,0,0,0,0,[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],0,0,[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],0,0,0,0,0,[[16,17],18],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[[16,17],18],0,0,[16,[[47,[46]]]],0,[[16,125,119],17],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[18,-1],5,0],[[130,-1],5,0],0,[[16,1],2],[16,2]],"c":[],"p":[[5,"Config",0],[1,"tuple"],[6,"WorkMode",0],[5,"Env",0],[1,"bool"],[6,"Option",2139],[5,"Namespace",694],[5,"Formatter",2140],[8,"Result",2140],[1,"str"],[6,"Result",2141],[8,"NsId",694],[5,"String",2142],[1,"slice"],[10,"Into",2143],[5,"Library",1368],[5,"TypeId",1368],[6,"Type",1368],[5,"TypeId",2144],[5,"Analysis",97],[5,"Info",340],[5,"Info",509],[17,"Output"],[10,"Fn",2145],[10,"Copy",2146],[5,"Info",360],[5,"Info",728],[5,"Info",877],[5,"Bounds",158],[5,"Function",1368],[5,"CParameter",378],[6,"Concurrency",1368],[5,"CallbackInfo",158],[6,"BoundType",158],[5,"Bound",158],[5,"PropertyBound",158],[5,"Iter",2147],[1,"char"],[5,"Imports",613],[8,"ChildProperties",256],[5,"ChildProperty",256],[5,"Property",1368],[5,"Property",853],[5,"Vec",2148],[5,"Info",284],[10,"Iterator",2149],[5,"Box",2150],[5,"Info",296],[5,"Constant",1368],[10,"Borrow",2151],[6,"ConversionType",312],[5,"Enumeration",1368],[8,"Result",959],[5,"Bitfield",1368],[5,"Parameter",1368],[5,"Parameters",378],[5,"Parameter",378],[5,"RustParameter",378],[6,"TransformationType",378],[5,"Transformation",378],[8,"Signatures",1066],[5,"AsyncTrampoline",509],[5,"AsyncFuture",509],[1,"usize"],[17,"Item"],[10,"IntoIterator",2152],[5,"StatusedTypeId",598],[5,"ImportConditions",613],[6,"Ordering",2153],[5,"ImportsWithDefault",613],[5,"IntoIter",2154],[5,"InfoBase",670],[5,"Info",694],[6,"LocationInObject",728],[6,"Cow",2155],[5,"Info",940],[5,"Info",794],[6,"ThrowFunctionReturnStrategy",794],[6,"Mode",794],[5,"Info",1047],[6,"RefMode",914],[5,"Nullable",1368],[5,"Record",1368],[6,"RecordType",898],[6,"ParameterDirection",1368],[5,"RustType",959],[10,"FnOnce",2145],[5,"RustTypeBuilder",959],[6,"TypeError",959],[10,"ToString",2142],[1,"never"],[6,"ParameterScope",1368],[6,"TryFromGlib",1328],[6,"SafetyAssertionMode",1023],[5,"Signal",1368],[5,"Signature",1066],[5,"Infos",1079],[6,"Type",1079],[5,"TraitInfo",1079],[6,"FunctionType",1079],[5,"FunctionInfo",1079],[5,"BTreeMap",2156],[5,"Info",1175],[5,"Symbol",1175],[5,"Parameters",1209],[5,"RustParameter",1209],[5,"CParameter",1209],[5,"Transformation",1209],[6,"TransformationType",1209],[6,"Transfer",1368],[5,"Trampoline",1299],[10,"DerivesCopy",1354],[10,"ImplementsDebug",1354],[10,"IsExternal",1354],[10,"IsIncomplete",1354],[10,"IsPtr",1354],[10,"IsVolatile",1354],[5,"Path",2157],[1,"u16"],[5,"Mandatory",1368],[5,"Infallible",1368],[6,"FunctionKind",1368],[6,"Basic",1368],[5,"Alias",1368],[5,"Union",1368],[5,"Interface",1368],[5,"Class",1368],[5,"Custom",1368],[5,"Field",1368],[5,"Namespace",1368],[5,"Member",1368],[6,"ErrorDomain",1368],[10,"Hasher",2158],[10,"AsRef",2143],[15,"Result",338],[15,"Length",491],[15,"ToGlibPointer",491],[15,"ToGlibDirect",491],[15,"ToGlibScalar",491],[15,"ToGlibUnknown",491],[15,"Result",1351],[15,"ResultInfallible",1351]],"b":[[1785,"impl-Debug-for-Type"],[1786,"impl-Display-for-Type"]]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
