var searchIndex = JSON.parse('{\
"gir":{"doc":"","t":"NNIEKLLFLLFFFLLL","n":["CheckGirFile","Config","OptionStr","RunKind","as_str_ref","borrow","borrow_mut","build_config","from","into","main","print_usage","run_check","try_from","try_into","type_id"],"q":[[0,"gir"]],"d":["","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","",""],"i":[3,3,0,0,8,3,3,0,3,3,0,0,0,3,3,3],"f":[0,0,0,0,[[],[[2,[1]]]],[[]],[[]],[[],[[5,[3,4]]]],[[]],[[]],[[],[[5,[4]]]],[[1,6]],[1,[[5,[4]]]],[[],5],[[],5],[[],7]],"c":[],"p":[[15,"str"],[4,"Option"],[4,"RunKind"],[3,"String"],[4,"Result"],[3,"Options"],[3,"TypeId"],[8,"OptionStr"]]},\
"libgir":{"doc":"","t":"DNNDCNNEAMCMLLLLLLLMCLLFMMLMMMLLLLMMMMLLALLLLLLLMMMLLLLLLLMAMLMMLMMLMCLMLMMMMCLMLMLLLLLLLLLLLLAMMDCLLAAAAAAMALMMAALLLLLLAMMLLAAAMAALFAAMAAAAMAAFAAAAAAAAALALLANDEDDNNDLLMMLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLMMLFFFGDFLLMMMLLMLLMMLMMMMMMLLLMLFDLLLLLFLLLLLDFLLMMLLMLMLLMLMNENNNNNNLLLLLLLLLLLLLLLLLLMMDLLLLLMMLMFMLLLLMMFFDLLLLLMMLMFMLLLLMMDNNDDDNNNNNNDEFLLLLLLLLLLLLLMMMLLLLLLLLLLLLLMMLLLLLLLLLLLLLLMMMMLLLLLLMLMMMMMMMMLLLLLLLMMMLLLLLLMMLLLLLLMMLLLLLLMMMMMMMMMMMMMMMMMMMDDDFMMMMLLLLLLMMMMMLLLLLMMMMMLMMMMFFMFLLLLLLMMMMMLLLLFMMLMMMMMMMMMMMMLLMMLLMLLLLLLLLLMMMMDLLLLLLLMMLLLLMDDDLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLDLLMMLLMLLMLMMLLMMLLLMMMRDRDGLLLLMLLLLMMLLLMLMMFMMMLLLLLLMNNNNNNDENMLLLLMMMMMFLLLLLLLLMLLLLLLMMLFMMLFLLMMLLMMMLMMMLMLLLLLLMMNNDENNNNENNFLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLFDFLLMMLLMMMFLMMMMMLLMLMMDMLLMMMLLMLLMMLMFLLLLNNENLLLLLLLLLLLLNNNNNNELLLLLLLLLLLLLLLLLLLDFMMLLLLMLLLLMMLLLLNNGDDENLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNENLLLLLLLLLLLLLLLLLLLDMFLLMMMLLMLMMMLLLMDGLLLLLLLLLLLNNNNNDENDNNDENFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFMLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLFMMFFDDLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLNDNDDDENFLLLLLLLLLLMMLLLLLLLLLLMLMLLLLLLLLLLLLMMLLLLLLMMMLMLMMMLLLLLMMMLLLLLMLLLLLMMMLLLLLDGFLLMMLLMMLLMLMMMMMMLLLFLMMMNNNNNNELLLLLLLLLLLLLLLLMMMIIIIIIKKKKKKFFDNNNENDNNNNNNDNNEDNNDNNDNEDNNNNDNNNENNRRNNDNNNNNNDNDNNRDDNDNNNNNNDNNDEENDNNDNNNNNNNDNEENDNNNNNNNNNNDNNNNNLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLMMMLMLLLLLLLLLLMMMMMMMMMMLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMLLLLMMMMMMMMLLLLLLMMMLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLMLMLLLLLLLLMLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMLLLMLMMMMMMLLLLLLLLLLLLMMMMLMLMLLMMMMLMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMLMMMMMMMMMMMMMMMMLLMFF","n":["Config","DisplayNotBound","Doc","Env","Library","Normal","Sys","WorkMode","analysis","analysis","analysis_run","auto_path","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","check_disable_format","class_hierarchy","class_hierarchy_run","clone","clone_into","codegen_generate","concurrency","config","default","deprecate_by_min_version","disable_format","doc_target_path","eq","equivalent","equivalent","equivalent","external_docs_url","external_libraries","extra_versions","feature_dependencies","filter_version","find_ext_library","fmt","fmt","fmt","fmt","from","from","from","from_str","generate_safety_asserts","girs_dirs","girs_version","into","into","into","is_generate_rust_files","is_normal","is_too_low_version","is_totally_deprecated","lib_version_overrides","library","library","library_full_name","library_name","library_version","main_sys_crate_name","make_backup","min_cfg_version","min_required_version","namespaces","namespaces_run","new","objects","resolve_type_ids","show_statistics","single_version_file","split_build_rs","symbols","symbols_run","sys_crate_import","target_path","to_owned","trust_return_value_nullability","try_from","try_from","try_from","try_into","try_into","try_into","type_","type_id","type_id","type_id","type_status","type_status_sys","update_version","use_gi_docgen","work_mode","Analysis","Parameter","borrow","borrow_mut","bounds","c_type","child_properties","class_builder","class_hierarchy","constants","constants","conversion_type","default","enum_imports","enumerations","enums","ffi_type","find_enum_by_function","find_flag_by_function","find_global_function","find_object_by_function","find_object_by_virtual_method","find_record_by_function","flags","flags","flags_imports","fmt","from","function_parameters","functions","general","global_functions","imports","info_base","into","is_gpointer","namespaces","object","objects","out_parameters","properties","record","record_type","records","ref_mode","return_value","run","rust_type","safety_assertion_mode","signals","signatures","special_functions","supertypes","symbols","trampoline_parameters","trampolines","try_from","try_from_glib","try_into","type_id","types","AsRef","Bound","BoundType","Bounds","CallbackInfo","IsA","NoWrapper","PropertyBound","add_for_parameter","add_parameter","alias","alias","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bound_name","bound_type","callback_modified","callback_type","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","default","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","error_parameters","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","get","get_parameter_bound","get_to_glib_extra","has_alias","into","into","into","into","into","is_empty","iter","iter_lifetimes","need_isa","parameter_name","success_parameters","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_for","type_id","type_id","type_id","type_id","type_id","type_str","type_str","update_imports","implements_c_type","is_mut_ptr","rustify_pointers","ChildProperties","ChildProperty","analyze","borrow","borrow_mut","bounds","child_name","child_type","clone","clone_into","doc_hidden","fmt","from","get_out_ref_mode","getter_name","into","name","nullable","prop_name","set_in_ref_mode","set_params","to_glib_extra","to_owned","try_from","try_into","typ","type_id","analyze","Info","borrow","borrow_mut","fmt","from","into","run","subtypes","supertypes","try_from","try_into","type_id","Info","analyze","borrow","borrow_mut","cfg_condition","deprecated_version","fmt","from","glib_name","into","name","try_from","try_into","typ","type_id","version","Borrow","ConversionType","Direct","Option","Pointer","Result","Scalar","Unknown","borrow","borrow_mut","can_use_to_generate","clone","clone_into","default","eq","equivalent","equivalent","equivalent","fmt","from","into","of","to_owned","try_from","try_into","type_id","err_type","ok_type","Info","borrow","borrow_mut","default","fmt","from","full_name","functions","into","name","new","specials","try_from","try_into","type_","type_id","type_id","visibility","ffi_type","used_ffi_type","Info","borrow","borrow_mut","default","fmt","from","full_name","functions","into","name","new","specials","try_from","try_into","type_","type_id","type_id","visibility","CParameter","IntoRaw","Length","Parameter","Parameters","RustParameter","ToGlibBorrow","ToGlibDirect","ToGlibPointer","ToGlibScalar","ToGlibUnknown","ToSome","Transformation","TransformationType","analyze","analyze_return","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_parameters","c_type","caller_allocates","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","destroy_index","direction","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_parameter","from_return_value","ind_c","ind_c","ind_rust","instance_parameter","into","into","into","into","into","into","is_error","is_to_glib","lib_par","move_","name","name","nullable","ref_mode","rust_parameters","scope","set_to_glib_extra","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","transfer","transformation_type","transformations","try_from","try_from","try_from","try_from","try_from","try_from","try_from_glib","try_from_glib","try_into","try_into","try_into","try_into","try_into","try_into","typ","typ","type_id","type_id","type_id","type_id","type_id","type_id","user_data_index","array_length_name","array_length_type","array_name","explicit_target_type","in_trait","instance_parameter","move_","name","name","name","name","needs_into","nullable","nullable","pointer_cast","ref_mode","to_glib_extra","transfer","AsyncFuture","AsyncTrampoline","Info","analyze","assertion","assertion","async","async_future","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bound_name","bounds","callback_type","callbacks","cfg_condition","clone","clone","clone_into","clone_into","codegen_name","commented","deprecated_version","destroys","doc_hidden","doc_ignore_parameters","doc_link","doc_struct_name","doc_trait_name","error_parameters","ffi_ret","find_function","find_index_to_ignore","finish_func_name","finish_function_name","fmt","fmt","fmt","from","from","from","func_name","generate_doc","glib_name","has_error_parameter","hidden","into","into","into","is_async_finish","is_carray_with_direct_elements","is_method","is_method","is_special","kind","name","name","name","new_name","not_version","ns_id","output_params","outs","parameters","remove_params","ret","should_be_doc_linked","should_docs_be_generated","status","success_parameters","to_owned","to_owned","trampoline","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","type_name","unsafe_","version","visibility","StatusedTypeId","borrow","borrow_mut","clone","clone_into","fmt","from","into","name","status","to_owned","try_from","try_into","type_id","type_id","ImportConditions","Imports","ImportsWithDefault","add","add_defined","add_used_type","add_used_type_with_version","add_used_types","add_with_constraint","add_with_version","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","compare","constraints","default","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","fmt","from","from","from","into","into","into","iter","new","partial_cmp","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","with_defaults","with_defined","InfoBase","borrow","borrow_mut","cfg_condition","concurrency","constructors","default","deprecated_version","fmt","from","full_name","functions","functions","imports","into","methods","name","specials","try_from","try_into","type_id","type_id","version","visibility","INTERNAL","Info","MAIN","Namespace","NsId","borrow","borrow","borrow_mut","borrow_mut","crate_name","fmt","fmt","from","from","glib_ns_id","higher_crate_name","index","into","into","is_glib_crate","main","name","package_names","run","shared_libs","symbol_prefixes","sys_crate_name","try_from","try_from","try_into","try_into","type_id","type_id","versions","Builder","ClassExt","ClassExtManual","Ext","ExtManual","Impl","Info","LocationInObject","VirtualExt","base","borrow","borrow","borrow_mut","borrow_mut","builder_postprocess","builder_properties","c_class_type","c_type","child_properties","class","clone","clone_into","default","deref","eq","equivalent","equivalent","equivalent","final_type","fmt","fmt","from","from","function_location","generate_doc_link_info","generate_trait","get_type","has_action_signals","has_builder_properties","has_constructors","has_functions","has_signals","interface","into","into","is_fundamental","is_interface","need_generate_inherent","need_generate_trait","notify_signals","properties","ref_fn","should_generate_impl_block","signals","signatures","supertypes","to_owned","trait_name","try_from","try_from","try_into","try_into","type_id","type_id","unref_fn","virtual_methods","CheckError","Combined","Info","Mode","None","Normal","Optional","ReturnResult","ThrowFunctionReturnStrategy","Throws","Void","analyze","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","can_as_return","clone","clone","clone_into","clone_into","default","default","default","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","into","into","into","is_empty","iter","mode","params","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","use_function_return_for_result","Property","analyze","borrow","borrow_mut","bounds","deprecated_version","fmt","from","func_name","func_name_alias","get_out_ref_mode","get_property_ref_modes","into","is_get","name","nullable","set_bound","set_in_ref_mode","try_from","try_into","typ","type_id","var_name","version","Info","base","borrow","borrow_mut","boxed_inline","clear_function_expression","copy_into_function_expression","default","deref","derives","fmt","from","glib_get_type","init_function_expression","into","is_boxed","new","try_from","try_into","type_","type_id","AutoBoxed","Boxed","RecordType","Refcounted","borrow","borrow_mut","eq","equivalent","equivalent","equivalent","from","into","of","try_from","try_into","type_id","ByRef","ByRefConst","ByRefFake","ByRefImmut","ByRefMut","None","RefMode","borrow","borrow_mut","clone","clone_into","eq","equivalent","equivalent","equivalent","fmt","from","from_str","into","is_ref","of","to_owned","try_from","try_into","type_id","without_unneeded_mut","Info","analyze","base_tid","bool_return_is_error","borrow","borrow_mut","clone","clone_into","commented","default","fmt","from","into","nullable_return_is_error","parameter","to_owned","try_from","try_into","type_id","Ignored","Mismatch","Result","RustType","RustTypeBuilder","TypeError","Unimplemented","alter_type","as_str","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","builder","callback_parameters_config","clone","clone","clone_into","clone_into","concurrency","default","direction","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from","from","from","into","into","into","into_used_types","nullable","ref_mode","scope","to_owned","to_owned","try_build","try_build_param","try_from","try_from","try_from","try_from_glib","try_into","try_into","try_into","try_new","type_id","type_id","type_id","used_types","InMainThread","None","NotInitialized","SafetyAssertionMode","Skip","borrow","borrow_mut","clone","clone_into","default","eq","equivalent","equivalent","equivalent","fmt","from","from_str","into","is_none","of","to_owned","try_from","try_into","type_id","Info","action_emit_name","analyze","borrow","borrow_mut","connect_name","deprecated_version","doc_hidden","fmt","from","generate_doc","into","is_detailed","signal_name","trampoline","try_from","try_into","type_id","version","Signature","Signatures","borrow","borrow_mut","fmt","from","has_for_property","has_in_deps","into","new","try_from","try_into","type_id","Compare","Copy","Display","Equal","Free","FunctionInfo","FunctionType","Hash","Infos","Ref","StaticStringify","TraitInfo","Type","Unref","analyze_imports","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","compare","compare","default","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extract","first_parameter_mut","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_str","functions","glib_name","has_trait","into","into","into","into","into","partial_cmp","partial_cmp","to_owned","to_owned","to_owned","to_owned","traits","traits_mut","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_","type_id","type_id","type_id","type_id","type_id","unhide","version","version","analyze","dependencies","Info","Symbol","borrow","borrow","borrow_mut","borrow_mut","by_c_name","by_c_name_mut","by_tid","clone","clone_into","crate_name","default","fmt","fmt","from","from","full_rust_name","into","into","is_rust_prelude","make_trait","make_trait_method","name","owner_name","parent","run","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Borrow","CParameter","None","Parameters","RustParameter","Transformation","TransformationType","TreePath","analyze","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_parameters","c_type","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","conversion_type","default","direction","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_str","get","ind_c","ind_rust","into","into","into","into","into","is_real_gpointer","name","name","name","new","nullable","prepare_transformation","ref_mode","ref_mode","rust_parameters","to_owned","to_owned","to_owned","to_owned","to_owned","transfer","transformation","transformations","try_from","try_from","try_from","try_from","try_from","try_from_glib","try_into","try_into","try_into","try_into","try_into","typ","typ","typ","type_id","type_id","type_id","type_id","type_id","Trampoline","Trampolines","analyze","borrow","borrow_mut","bound_name","bounds","clone","clone_into","concurrency","destroy_index","fmt","from","inhibit","into","is_notify","name","nullable","parameters","ret","scope","to_owned","try_from","try_into","type_error","type_id","type_name","user_data_index","version","Default","NotImplemented","Option","OptionMandatory","Result","ResultInfallible","TryFromGlib","borrow","borrow_mut","clone","clone_into","default","fmt","from","from_parameter","from_return_value","from_type_defaults","into","or_type_defaults","to_owned","try_from","try_into","type_id","err_type","ok_type","ok_type","DerivesCopy","ImplementsDebug","IsExternal","IsIncomplete","IsPtr","IsVolatile","derives_copy","implements_debug","is_external","is_incomplete","is_ptr","is_volatile","check_fmt","format","Alias","Alias","Array","Async","Basic","Basic","Bitfield","Bitfield","Bool","Boolean","CArray","Call","Char","Class","Class","ClassMethod","Concurrency","Constant","Constructor","Container","Custom","Custom","Double","Enumeration","Enumeration","ErrorDomain","Field","Filename","FixedArray","Float","Full","Function","Function","Function","Function","FunctionKind","Global","HashTable","INTERNAL_NAMESPACE","INTERNAL_NAMESPACE_NAME","In","InOut","Infallible","Int","Int16","Int32","Int64","Int8","IntPtr","Interface","Interface","Library","List","Long","MAIN_NAMESPACE","Mandatory","Member","Method","Namespace","None","None","None","None","None","Notified","Nullable","OsString","Out","Parameter","ParameterDirection","ParameterScope","Pointer","Property","PtrArray","Quark","Record","Record","Return","SList","SSize","Send","SendSync","Short","Signal","Size","Transfer","Type","Type","TypeId","UChar","UInt","UInt16","UInt32","UInt64","UInt8","UIntPtr","ULong","UShort","UniChar","Union","Union","Unsupported","Utf8","VarArgs","VirtualMethod","add_constant","add_function","add_glib_priority","add_namespace","add_type","array_length","array_length","bits","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_array","c_class_type","c_class_type","c_identifier","c_identifier","c_identifier","c_identifier","c_includes","c_type","c_type","c_type","c_type","c_type","c_type","c_type","c_type","c_type","c_type","caller_allocates","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","closure","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","constants","construct","construct_only","container","conversion_type","default","default","default","default","default","default","default","default","default","default","deprecated_version","deprecated_version","deprecated_version","deprecated_version","deprecated_version","deprecated_version","deprecated_version","deprecated_version","deprecated_version","deprecated_version","deref","deref","deref","deref_mut","derives_copy","derives_copy","derives_copy","derives_copy","derives_copy","derives_copy","derives_copy","derives_copy","derives_copy","destroy","direction","disguised","doc","doc","doc","doc","doc","doc","doc","doc","doc","doc","doc","doc","doc","doc","doc","doc_deprecated","doc_deprecated","doc_deprecated","doc_deprecated","doc_deprecated","doc_deprecated","doc_deprecated","doc_deprecated","doc_deprecated","doc_deprecated","doc_deprecated","doc_deprecated","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","error_domain","fields","fields","fields","final_type","find_c_array","find_namespace","find_or_stub_type","find_type","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_str","from_str","from_str","from_str","from_str","full_name","function","functions","functions","functions","functions","functions","functions","functions","functions","get_deprecated_version","get_glib_name","get_inner_type","get_name","glib_get_type","glib_get_type","glib_get_type","glib_get_type","glib_get_type","glib_get_type","glib_name_index","gtype_struct_for","has_copy","has_destroy","has_free","has_ref","has_unref","hash","id","identifier_prefixes","implements","implements_debug","index","index","instance_parameter","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_abstract","is_abstract","is_action","is_async","is_basic","is_basic_type","is_basic_type","is_bitfield","is_call","is_class","is_crate","is_detailed","is_enumeration","is_error","is_external","is_external","is_external","is_external","is_external","is_final_type","is_function","is_fundamental","is_fundamental","is_glib_crate","is_in","is_incomplete","is_incomplete","is_incomplete","is_incomplete","is_incomplete","is_incomplete","is_incomplete","is_incomplete","is_incomplete","is_interface","is_none","is_out","is_ptr","is_ptr","is_volatile","kind","members","members","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","namespace","namespace_mut","namespace_types","namespaces","new","ns_id","nullable","package_names","parameters","parameters","parent","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","postprocessing","preprocessing","prerequisites","private","properties","properties","read_file","readable","record","ref_fn","register_version","requires_conversion","ret","ret","scope","shared_library","show_non_bound_types","signals","signals","status","symbol_prefix","symbol_prefix","symbol_prefix","symbol_prefix","symbol_prefix","symbol_prefix","symbol_prefixes","target_c_type","throws","tid_bool","tid_c_bool","tid_filename","tid_none","tid_os_string","tid_uint32","tid_utf8","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","transfer","transfer","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","typ","typ","typ","typ","typ","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_mut","type_struct","type_struct","types","types","union","unref_fn","value","value","version","version","version","version","version","version","version","version","version","version","versions","virtual_methods","virtual_methods","visit_functions_mut","visit_functions_mut","writable","apply_config","check_function_real_version"],"q":[[0,"libgir"],[97,"libgir::analysis"],[158,"libgir::analysis::bounds"],[253,"libgir::analysis::c_type"],[256,"libgir::analysis::child_properties"],[283,"libgir::analysis::class_builder"],[284,"libgir::analysis::class_hierarchy"],[296,"libgir::analysis::constants"],[312,"libgir::analysis::conversion_type"],[338,"libgir::analysis::conversion_type::ConversionType"],[340,"libgir::analysis::enums"],[358,"libgir::analysis::ffi_type"],[360,"libgir::analysis::flags"],[378,"libgir::analysis::function_parameters"],[491,"libgir::analysis::function_parameters::TransformationType"],[509,"libgir::analysis::functions"],[598,"libgir::analysis::general"],[613,"libgir::analysis::imports"],[670,"libgir::analysis::info_base"],[694,"libgir::analysis::namespaces"],[728,"libgir::analysis::object"],[794,"libgir::analysis::out_parameters"],[853,"libgir::analysis::properties"],[877,"libgir::analysis::record"],[898,"libgir::analysis::record_type"],[914,"libgir::analysis::ref_mode"],[940,"libgir::analysis::return_value"],[959,"libgir::analysis::rust_type"],[1021,"libgir::analysis::safety_assertion_mode"],[1045,"libgir::analysis::signals"],[1064,"libgir::analysis::signatures"],[1077,"libgir::analysis::special_functions"],[1171,"libgir::analysis::supertypes"],[1173,"libgir::analysis::symbols"],[1207,"libgir::analysis::trampoline_parameters"],[1297,"libgir::analysis::trampolines"],[1326,"libgir::analysis::try_from_glib"],[1349,"libgir::analysis::try_from_glib::TryFromGlib"],[1352,"libgir::analysis::types"],[1364,"libgir::fmt"],[1366,"libgir::library"],[2132,"libgir::update_version"]],"d":["","","","","","","","","","","","Path where files generated in normal and sys mode","","","","","","","","","","","","","","","","","","","","","","","An url that will be inserted into the docs as link that …","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Helper to get the ffi crate import","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Bound does not have an alias when <code>param: impl type_str</code> is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","Coded without conversion.","Type implementing TryFromGlib&lt;Error=GlibNoneError&gt;.","Coded with from_glib_xxx.","Type implementing TryFromGlib where Err is neither …","Coded with from_glib.","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Index of the destroy notification parameter associated …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Index of the user data parameter associated with the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether the function can’t be generated","","","","","","","","","","","","","Given async function name tries to guess the name of …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Whether the function is hidden (an implementation detail) …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","In order to generate docs links we need to know in which …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","Provides assistance in generating use declarations.","","Declares that name should be available through its last …","Declares that <code>name</code> is defined in scope","Declares that name should be available through its full …","Declares that name should be available through its full …","","Declares that name should be available through its last …","Declares that name should be available through its last …","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","TODO: return iterator","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","The location of an item within the object","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the location of the function within this object","Generate doc name based on function location within this …","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Specific to fundamental types","Whether we should generate an impl block for this object …","","","","","","","","","","","","Specific to fundamental types","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","Boxed record that use g_boxed_copy, g_boxed_free. Must …","Boxed record with custom copy/free functions","","Referencecounted record","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","A <code>RustType</code> definition and its associated types to be <code>use</code>d.","","","","","","","","","","","","Create a <code>RustTypeBuilder</code> which allows specifying additional","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Try building the <code>RustType</code> with no specific additional …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Convert this symbol into a trait","Convert this into a method of a trait","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","This field is used to give the type name when generating …","It’s used to group callbacks","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","Checks if given type derives Copy trait.","Checks if given type implements Debug trait.","Checks if type is external aka opaque type.","Checks if given type is incomplete, i.e., its size is …","Checks if given type is some kind of pointer.","Checks if given type has volatile qualifier.","","","","","","","Check if <code>cargo fmt</code> available","Run <code>cargo fmt</code> on path","","","","Used for the duration of the asynchronous call.","","","","","","","","Used only for the duration of the call.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parameter is not of callback type.","","","Used until notified with associated destroy notify …","","","","","","Annotation describing lifetime requirements / guarantees …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","C headers, relative to include directories provided by …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Index of the user data parameter associated with the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Index of the destroy notification parameter associated …","","A ‘disguised’ record is one where the c:type is a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","If the type is an Alias containing a basic, it’ll return …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Types from a single namespace in alphabetical order.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Specific to fundamental types","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,2,2,0,0,2,2,0,0,3,0,1,1,2,3,1,2,3,1,3,0,2,2,0,1,3,2,1,1,1,2,2,2,2,1,1,1,1,1,1,0,1,2,3,1,2,3,2,1,1,1,1,2,3,2,2,3,3,1,0,3,1,1,1,3,1,1,1,3,0,1,1,1,1,1,1,3,0,3,1,2,1,1,2,3,1,2,3,3,1,2,3,3,3,0,1,1,0,0,19,19,0,0,0,0,0,0,19,0,19,19,19,0,0,19,19,19,19,19,19,0,19,19,19,19,0,0,0,19,0,0,19,0,0,0,19,0,0,0,0,19,0,0,0,0,0,0,0,0,0,0,0,0,19,0,19,19,0,27,0,0,0,0,27,27,0,23,23,28,30,27,28,23,29,30,27,28,23,29,30,29,28,28,29,27,28,23,29,30,27,28,23,29,30,23,27,28,27,27,27,28,28,28,29,27,28,23,29,30,27,28,23,29,30,30,23,23,27,27,28,23,29,30,23,23,23,27,28,29,27,28,23,29,30,27,28,23,29,30,27,28,23,29,30,23,27,28,23,29,30,28,30,23,0,0,0,0,0,0,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,0,0,38,38,38,38,38,0,38,38,38,38,38,0,0,43,43,43,43,43,43,43,43,43,43,43,43,43,43,44,0,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,126,126,0,45,45,45,45,45,45,45,45,45,0,45,45,45,45,45,45,45,0,0,0,48,48,48,48,48,48,48,48,48,0,48,48,48,48,48,48,48,0,54,54,0,0,0,54,54,54,54,54,54,0,0,0,51,52,53,25,54,55,51,52,53,25,54,55,51,51,25,25,52,53,25,54,55,51,52,53,25,54,55,51,51,25,25,52,53,25,54,55,51,52,53,25,54,55,51,52,52,53,55,55,25,52,53,25,54,55,51,25,54,52,25,53,25,25,25,51,25,54,52,53,25,54,55,51,25,55,51,52,53,25,54,55,51,52,25,52,53,25,54,55,51,53,25,52,53,25,54,55,51,25,127,127,127,128,128,128,128,129,130,128,131,130,130,128,128,128,128,128,0,0,0,0,58,22,22,22,57,58,22,57,58,22,57,22,57,22,22,57,58,57,58,22,22,22,22,22,22,22,22,22,58,57,0,0,57,0,57,58,22,57,58,22,22,22,22,57,22,57,58,22,22,0,57,58,22,22,57,58,22,22,22,22,57,22,22,22,22,22,22,22,58,57,58,22,57,58,22,57,58,22,57,58,22,22,22,22,22,0,61,61,61,61,61,61,61,61,61,61,61,61,61,61,0,0,0,33,33,33,33,33,33,33,64,33,62,64,33,62,33,62,33,62,62,62,62,33,62,64,64,64,62,62,62,62,33,62,64,33,62,64,33,62,33,33,62,33,62,64,33,62,64,33,62,64,33,62,62,33,33,0,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,0,0,0,0,0,6,67,6,67,6,6,67,6,67,67,6,67,6,67,67,67,6,6,0,6,6,6,6,67,6,67,6,67,6,69,69,69,69,69,69,0,0,69,68,69,68,69,68,68,68,68,68,68,0,69,69,68,68,69,69,69,69,68,69,68,69,68,68,68,68,68,68,0,68,68,68,0,69,68,68,68,68,68,68,68,68,68,68,68,68,69,68,69,68,69,68,69,68,68,68,71,72,0,0,72,72,72,71,0,72,71,0,71,72,73,71,72,73,0,71,72,71,72,71,72,73,71,72,71,71,71,72,72,72,71,72,73,71,72,73,71,72,73,73,73,73,73,71,72,71,72,73,71,72,73,71,72,73,0,0,0,74,74,74,74,74,74,74,74,74,0,74,74,74,74,74,74,74,74,74,74,74,74,0,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,0,75,75,75,75,77,77,0,77,77,77,77,77,77,77,77,77,77,77,77,77,78,78,78,78,78,78,0,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,0,0,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,83,83,0,0,0,0,83,80,80,82,83,80,82,83,80,80,82,83,80,83,80,82,80,82,83,80,83,83,83,80,80,80,83,80,82,83,80,80,80,82,83,80,80,82,82,82,83,80,82,82,82,83,80,82,82,83,80,80,82,83,80,80,89,89,89,0,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,0,91,0,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,0,0,92,92,92,92,92,92,92,92,92,92,92,94,94,94,94,94,0,0,94,0,94,96,0,0,94,0,94,95,96,97,93,94,95,96,97,93,94,95,96,97,94,95,96,97,94,96,94,96,93,94,96,94,94,94,96,96,96,0,95,94,95,96,97,93,94,95,96,97,93,94,93,95,93,94,95,96,97,93,94,96,94,95,96,97,93,93,94,95,96,97,93,94,95,96,97,93,97,94,95,96,97,93,0,95,97,0,0,0,0,100,99,100,99,99,99,99,100,100,100,100,100,99,100,99,100,100,99,100,100,100,100,100,100,0,100,100,99,100,99,100,99,105,0,105,0,0,0,0,105,0,102,103,104,101,105,102,103,104,101,105,101,103,102,103,104,101,105,102,103,104,101,105,104,101,102,102,103,104,101,105,102,103,104,101,105,105,101,104,104,102,103,104,101,105,103,102,103,104,101,102,101,102,104,101,102,103,104,101,105,104,104,101,102,103,104,101,105,102,102,103,104,101,105,102,103,104,102,103,104,101,105,0,0,0,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,0,107,107,107,107,88,88,88,88,88,88,0,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,132,132,133,0,0,0,0,0,0,134,135,136,137,138,139,0,0,0,17,17,87,0,17,0,17,114,114,17,87,114,0,17,113,0,0,113,106,0,17,114,0,17,0,0,114,17,114,106,0,113,123,17,0,113,17,0,0,79,79,0,114,114,114,114,114,114,0,17,0,17,114,0,0,0,113,0,106,79,87,26,114,87,0,114,79,0,0,0,114,0,17,123,0,17,79,17,114,26,26,114,0,114,0,0,114,0,114,114,114,114,114,114,114,114,114,114,0,17,114,114,114,113,15,15,15,15,15,120,50,120,106,79,87,86,111,112,113,26,114,16,115,41,122,123,46,49,76,120,116,36,50,24,90,117,118,119,17,121,15,106,79,87,86,111,112,113,26,114,16,115,41,122,123,46,49,76,120,116,36,50,24,90,117,118,119,17,121,15,17,117,118,115,41,122,24,121,41,46,49,76,120,116,36,50,117,118,50,106,79,87,86,111,112,113,26,114,16,50,106,79,87,86,111,112,113,26,114,16,50,50,16,115,46,49,76,116,24,117,118,119,16,115,46,49,76,116,24,117,118,119,121,36,36,17,119,79,87,26,16,76,120,116,117,118,121,41,122,46,49,76,36,24,90,117,118,86,111,112,86,114,16,115,76,120,116,24,118,17,50,50,76,115,41,122,46,49,76,120,116,36,50,24,90,117,118,121,115,41,122,46,49,76,36,24,90,117,118,121,106,79,87,86,111,112,113,26,114,16,115,46,49,76,116,24,117,118,119,17,106,106,106,79,79,79,87,87,87,86,86,86,111,111,111,112,112,112,113,113,113,26,26,26,114,114,114,16,16,16,115,115,115,46,46,46,49,49,49,76,76,76,116,116,116,24,24,24,117,117,117,118,118,118,119,119,119,17,17,17,46,76,116,118,118,17,15,15,15,106,79,87,86,111,112,113,26,114,16,115,41,122,123,46,49,76,120,116,36,50,24,90,117,118,119,17,17,121,15,106,79,87,86,111,112,113,26,114,16,115,41,122,123,46,49,76,120,116,36,50,24,90,117,118,119,17,121,15,106,79,87,113,26,16,17,17,46,49,76,116,117,118,121,17,17,17,17,46,49,76,116,117,118,121,76,76,76,76,76,76,16,16,121,118,120,121,15,50,106,79,87,86,111,112,113,26,114,16,115,41,122,123,46,49,76,120,116,36,50,24,90,117,118,119,17,121,15,17,118,90,87,17,16,17,17,87,17,15,90,17,50,115,76,116,118,17,17,17,17,118,15,79,114,16,115,76,120,116,24,118,17,17,87,79,115,120,120,24,46,49,115,41,122,46,49,76,120,116,36,50,24,90,117,118,119,121,15,15,15,15,15,16,50,121,24,90,118,16,115,46,49,76,116,24,117,118,119,15,15,117,120,117,118,15,36,17,118,15,114,24,90,50,121,15,117,118,122,46,49,76,116,117,118,121,115,24,16,16,16,16,16,16,16,106,79,87,86,111,112,113,26,114,16,50,17,36,50,106,79,87,86,111,112,113,26,114,16,115,41,122,123,46,49,76,120,116,36,50,24,90,117,118,119,17,121,15,106,79,87,86,111,112,113,26,114,16,115,41,122,123,46,49,76,120,116,36,50,24,90,117,118,119,17,121,15,115,41,120,36,50,15,106,79,87,86,111,112,113,26,114,16,115,41,122,123,46,49,76,120,116,36,50,24,90,117,118,119,17,121,15,15,117,118,15,121,17,118,41,122,41,122,46,49,76,36,24,90,117,118,121,117,118,17,121,36,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[1],0,0,[2,2],[[]],[3],0,0,[[],2],0,0,0,[[2,2],4],[[],4],[[],4],[[],4],0,0,0,0,[[1,[5,[0]]],[[5,[0]]]],[[1,6],[[5,[0]]]],0,[[1,7],8],[[2,7],8],[[3,7],8],[[]],[[]],[[]],[9,[[10,[2]]]],0,0,0,[[]],[[]],[[]],[2,4],[2,4],[[3,[5,[11]],[5,[0]]],4],[[3,[5,[11]],[5,[0]]],4],0,0,0,[1,12],0,0,[3,9],0,0,[[1,3,[5,[11]]],[[5,[0]]]],0,0,[[[13,[[5,[9]]]],[13,[[5,[2]]]],[14,[12]],[13,[[5,[9]]]],[13,[[5,[9]]]],[13,[[5,[9]]]],[13,[[5,[9]]]],4,4,4],[[10,[1,12]]]],0,[[1,15]],0,0,0,0,0,[[3,16],12],0,[[]],0,[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[3,16],17],[[],18],[[],18],[[],18],0,0,0,0,0,0,0,[[]],[[]],0,0,0,0,0,0,0,0,[[],19],0,0,0,0,[[19,3,[0,[20,21]],[0,[20,21]]],5],[[19,3,[0,[20,21]],[0,[20,21]]],5],[[19,3,[0,[20,21]]],[[5,[22]]]],[[19,3,[0,[20,21]],[0,[20,21]]],5],[[19,3,[0,[20,21]],[0,[20,21]]],5],[[19,3,[0,[20,21]],[0,[20,21]]],5],0,0,0,[[19,7],8],[[]],0,0,0,0,0,0,[[]],[9,4],0,0,0,0,0,0,0,0,0,0,[3],0,0,0,0,0,0,0,0,0,[[],10],0,[[],10],[[],18],0,0,0,0,0,0,0,0,0,[[23,3,24,25,4,26,[14,[0]]]],[[23,9,9,27,4]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[27,27],[28,28],[23,23],[29,29],[30,30],[[]],[[]],[[]],[[]],[[]],[[],23],[[27,27],4],[[28,28],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],0,[[27,7],8],[[28,7],8],[[23,7],8],[[29,7],8],[[30,7],8],[[]],[[]],[[]],[[]],[[]],[[3,16],[[5,[30]]]],[[23,9],[[5,[28]]]],[[27,4,4,4],12],[27,4],[[]],[[]],[[]],[[]],[[]],[23,4],[23,[[31,[28]]]],[23,[[31,[32]]]],[27,4],0,0,[[]],[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[3,16],[[5,[27]]]],[[],18],[[],18],[[],18],[[],18],[[],18],0,0,[[23,33]],[[3,16,9],4],[9,4],[9],0,0,[[3,[5,[0]],16,33],34],[[]],[[]],0,0,0,[35,35],[[]],0,[[35,7],8],[[]],0,0,[[]],0,0,0,0,0,0,[[]],[[],10],[[],10],0,[[],18],0,0,[[]],[[]],[[38,7],8],[[]],[[]],[15,38],[[38,16],[[40,[39]]]],[[38,16],[[14,[16]]]],[[],10],[[],10],[[],18],0,0,[[]],[[]],0,0,[[43,7],8],[[]],0,[[]],0,[[],10],[[],10],0,[[],18],0,0,0,0,0,0,0,0,0,[[]],[[]],[44,4],[44,44],[[]],[[],44],[[44,44],4],[[],4],[[],4],[[],4],[[44,7],8],[[]],[[]],[[3,16],44],[[]],[[],10],[[],10],[[],18],0,0,0,[[]],[[]],[[],45],[[45,7],8],[[]],0,0,[[]],0,0,0,[[],10],[[],10],[[45,15],46],[[],18],0,0,[[3,16,9],47],[[3,16,9],[[5,[12]]]],0,[[]],[[]],[[],48],[[48,7],8],[[]],0,0,[[]],0,0,0,[[],10],[[],10],[[48,15],49],[[],18],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[3,[14,[50]],[14,[0]],4,4,4],51],[[51,3,[5,[52]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[52,52],[53,53],[25,25],[54,54],[55,55],[51,51],[[]],[[]],[[]],[[]],[[]],[[]],[[],51],0,0,[[52,7],8],[[53,7],8],[[25,7],8],[[54,7],8],[[55,7],8],[[51,7],8],[[]],[[]],[[]],[[]],[[]],[[]],[[3,50,[14,[0]]],52],[[3,50,[14,[0]]],52],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,[54,4],0,0,0,0,0,0,0,0,[[54,9]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],0,0,[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],0,0,[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[57,57],[58,58],[[]],[[]],[22,9],0,0,0,0,0,[[22,[5,[9]],[5,[9]],4],12],0,0,0,0,[[3,9],[[5,[24]]]],[[59,[5,[50]]],[[5,[60]]]],0,[9,12],[[57,7],8],[[58,7],8],[[22,7],8],[[]],[[]],[[]],0,0,0,0,0,[[]],[[]],[[]],[[22,3],4],[[3,16],4],0,0,[22,4],0,0,0,0,0,0,0,0,0,0,0,0,[[22,3],4],[[22,3],4],0,0,[[]],[[]],0,[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],18],[[],18],[[],18],0,0,0,0,0,[[]],[[]],[61,61],[[]],[[61,7],8],[[]],[[]],0,0,[[]],[[],10],[[],10],[[],18],0,0,0,0,[[33,9]],[[33,9]],[[33,9]],[[33,9,[5,[0]]]],[[33,[14,[12]]]],[[33,9,[5,[0]],[5,[9]]]],[[33,9,[5,[0]]]],[[]],[[]],[[]],[[]],[[]],[[]],[33,33],[62,62],[[]],[[]],[[62,62],63],[[],63],0,[[],33],[[],62],[64],[64],[64],[[62,62],4],[[],4],[[],4],[[],4],[[33,7],8],[[62,7],8],[[]],[[]],[[]],[[]],[[]],[[]],[33,65],[15,33],[[62,62],[[5,[63]]]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],18],[[],18],[[],18],0,[[33,[5,[0]],[5,[12]]],64],[[15,9],33],0,[[]],[[]],0,0,[66,[[37,[22]]]],[[],66],0,[[66,7],8],[[]],0,[66,[[37,[22]]]],0,0,[[]],[66,[[37,[22]]]],0,0,[[],10],[[],10],[[],18],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,[[6,7],8],[[67,7],8],[[]],[[]],0,0,[[67,11],6],[[]],[[]],0,[67,6],0,0,[15,67],0,0,0,[[],10],[[],10],[[],10],[[],10],[[],18],[[],18],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,0,0,0,0,0,[69,69],[[]],[[],68],[68,66],[[69,69],4],[[],4],[[],4],[[],4],0,[[69,7],8],[[68,7],8],[[]],[[]],[[68,22],69],[[68,22]],0,0,[68,4],[14,4],0,0,[68,4],0,[[]],[[]],0,0,[68,4],[68,4],0,0,0,[68,4],0,0,0,[[]],0,[[],10],[[],10],[[],10],[[],10],[[],18],[[],18],0,0,0,0,0,0,0,0,0,0,0,0,0,[[3,24,[14,[25]],70,[14,[0]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[3,50],4],[71,71],[72,72],[[]],[[]],[[],71],[[],72],[[],73],[[71,71],4],[[72,72],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[71,7],8],[[72,7],8],[[73,7],8],[[]],[[]],[[]],[[]],[[]],[[]],[73,4],[73,[[31,[52]]]],0,0,[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],18],[[],18],[[],18],[[3,16,9,[14,[0]]],4],0,0,[[]],[[]],0,0,[[74,7],8],[[]],0,0,0,[[3,36]],[[]],0,0,0,0,0,[[],10],[[],10],0,[[],18],0,0,0,0,[[]],[[]],0,0,0,[[],75],[75,66],0,[[75,7],8],[[]],0,0,[[]],0,0,[[],10],[[],10],[[75,15],76],[[],18],0,0,0,0,[[]],[[]],[[77,77],4],[[],4],[[],4],[[],4],[[]],[[]],[76,77],[[],10],[[],10],[[],18],0,0,0,0,0,0,0,[[]],[[]],[78,78],[[]],[[78,78],4],[[],4],[[],4],[[],4],[[78,7],8],[[]],[9,[[10,[78]]]],[[]],[78,4],[[3,16,79],78],[[]],[[],10],[[],10],[[],18],[[3,50,4,4],78],0,0,0,0,[[]],[[]],[70,70],[[]],0,[[],70],[[70,7],8],[[]],[[]],0,0,[[]],[[],10],[[],10],[[],18],0,0,0,0,0,0,0,[[80,81],80],[80,9],[[]],[[]],[[]],[[]],[[]],[[]],[[3,16],82],[[82,[14,[0]]],82],[83,83],[80,80],[[]],[[]],[[82,26],82],[[],80],[[82,79],82],[[83,83],4],[[80,80],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[83,7],8],[[80,7],8],[[]],[[]],[84,80],[85],[[]],[[]],[[]],[[]],[80,[[37,[12]]]],[[82,86],82],[[82,78],82],[[82,87],82],[[]],[[]],[82,47],[82,47],[[],10],[[],10],[[],10],[[82,88],82],[[],10],[[],10],[[],10],[[3,16],47],[[],18],[[],18],[[],18],[80,[[37,[12]]]],0,0,0,0,0,[[]],[[]],[89,89],[[]],[[],89],[[89,89],4],[[],4],[[],4],[[],4],[[89,7],8],[[]],[9,[[10,[89,12]]]],[[]],[89,4],[[3,4,51],89],[[]],[[],10],[[],10],[[],18],0,0,0,[[]],[[]],0,0,0,[[91,7],8],[[]],0,[[]],0,0,0,[[],10],[[],10],[[],18],0,0,0,[[]],[[]],[[92,7],8],[[]],[[3,9,4,16,56,[14,[16]]]],[[92,3,9,[14,[16]]]],[[]],[24,92],[[],10],[[],10],[[],18],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[93,33]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[94,94],[95,95],[96,96],[97,97],[[]],[[]],[[]],[[]],[[94,94],63],[[96,96],63],[[],63],[[],63],[[],93],[[94,94],4],[[96,96],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],0,0,[[94,7],8],[[95,7],8],[[96,7],8],[[97,7],8],[[93,7],8],[[]],[[]],[[]],[[]],[[]],[9,[[10,[94]]]],[93,[[98,[12,97]]]],0,[[93,94],4],[[]],[[]],[[]],[[]],[[]],[[94,94],[[5,[63]]]],[[96,96],[[5,[63]]]],[[]],[[]],[[]],[[]],[93,[[98,[94,95]]]],[93,[[98,[94,95]]]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],0,[[],18],[[],18],[[],18],[[],18],[[],18],[[[14,[22]],93,94]],0,0,[[3,16,[5,[0]],33,4],[[37,[61]]]],[[3,16],[[37,[16]]]],0,0,[[]],[[]],[[]],[[]],[[99,9],[[5,[100]]]],[[99,9],[[5,[100]]]],[[99,16],[[5,[100]]]],[100,100],[[]],[100,[[5,[9]]]],[[],100],[[100,7],8],[[99,7],8],[[]],[[]],[100,12],[[]],[[]],[100,4],[[100,9]],[[100,9]],[100,9],[100,[[5,[9]]]],[100,12],[[15,67],99],[[]],[[],10],[[],10],[[],10],[[],10],[[],18],[[],18],0,0,0,0,0,0,0,0,[[3,[14,[50]],16,[14,[0]],[5,[[37,[0]]]]],101],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[102,102],[103,103],[104,104],[101,101],[105,105],[[]],[[]],[[]],[[]],[[]],0,[[],101],0,[[102,7],8],[[103,7],8],[[104,7],8],[[101,7],8],[[105,7],8],[[]],[[]],[[]],[[]],[[]],[9,[[10,[105]]]],[[101,60],[[5,[104]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[103,3],4],0,0,0,[60,101],0,[[101,3,16,12,12,79,106,86,78,44],104],0,0,0,[[]],[[]],[[]],[[]],[[]],0,0,0,[[],10],[[],10],[[],10],[[],10],[[],10],0,[[],10],[[],10],[[],10],[[],10],[[],10],0,0,0,[[],18],[[],18],[[],18],[[],18],[[],18],0,0,0,[[]],[[]],0,0,[107,107],[[]],0,0,[[107,7],8],[[]],0,[[]],0,0,0,0,0,0,[[]],[[],10],[[],10],[[3,50],[[5,[9]]]],[[],18],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[88,88],[[]],[[],88],[[88,7],8],[[]],[[3,16,[14,[0]]],88],[[3,16,[14,[0]]],88],[[3,16],88],[[]],[[88,3,16],[[108,[88]]]],[[]],[[],10],[[],10],[[],18],0,0,0,0,0,0,0,0,0,[15,4],[15,4],[15,4],[15,4],[[],4],[[],4],[[],4],[109],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[15,110,41]],[[15,110,24]],[[15,2]],[[15,9],110],[[15,110,9,17],16],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[15,16,[5,[110]],[5,[12]]],16],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[106,106],[79,79],[87,87],[86,86],[111,111],[112,112],[113,113],[26,26],[114,114],[16,16],[50,50],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[16,16],63],[[115,115],63],[[46,46],63],[[49,49],63],[[76,76],63],[[116,116],63],[[24,24],63],[[117,117],63],[[118,118],63],[[119,119],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],0,0,0,[[15,9,[37,[16]]],[[5,[16]]]],0,[[],79],[[],87],[[],26],[[],16],[[],76],[[],120],[[],116],[[],117],[[],118],[[],121],0,0,0,0,0,0,0,0,0,0,[86,4],[111,4],[112,4],[86,4],[15,4],[15,4],[15,4],[15,4],[15,4],[15,4],[15,4],[15,4],[15,4],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[106,106],4],[[79,79],4],[[87,87],4],[[86,86],4],[[111,111],4],[[112,112],4],[[113,113],4],[[26,26],4],[[114,114],4],[[16,16],4],[[115,115],4],[[46,46],4],[[49,49],4],[[76,76],4],[[116,116],4],[[24,24],4],[[117,117],4],[[118,118],4],[[119,119],4],[[17,17],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],0,0,0,0,0,[[15,16,[5,[110]]],16],[[15,9],[[5,[110]]]],[[15,110,9],16],[[15,110,9],[[5,[16]]]],[[106,7],8],[[79,7],8],[[87,7],8],[[86,7],8],[[111,7],8],[[112,7],8],[[113,7],8],[[26,7],8],[[114,7],8],[[16,7],8],[[115,7],8],[[41,7],8],[[122,7],8],[[123,7],8],[[46,7],8],[[49,7],8],[[76,7],8],[[120,7],8],[[116,7],8],[[36,7],8],[[50,7],8],[[24,7],8],[[90,7],8],[[117,7],8],[[118,7],8],[[119,7],8],[[17,7],8],[[17,7],8],[[121,7],8],[[15,7],8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[9,[[10,[106,12]]]],[9,[[10,[79,12]]]],[9,[[10,[87,12]]]],[9,[[10,[113,12]]]],[9,[[10,[26,12]]]],[[16,15],12],[[15,24],16],[17,[[14,[24]]]],0,0,0,0,0,0,0,[17,[[5,[0]]]],[17,[[5,[9]]]],[[17,3],5],[17,12],0,0,0,0,0,0,0,0,[76,4],[76,4],[76,4],[76,4],[76,4],[[16,124]],0,0,0,[[120,15],4],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[17,4],0,0,[87,4],[17,4],[[16,3],4],[[17,3],4],[17,4],[87,4],[17,4],[[15,9],4],0,[17,4],0,[[115,15],4],[[76,15],4],[[116,15],4],[[118,15],4],[[17,15],4],[17,4],[17,4],[17,4],0,[15,4],[79,4],[[114,15],4],[[16,15],4],[[115,15],4],[[76,15],4],[[120,15],4],[[116,15],4],[[24,15],4],[[118,15],4],[[17,15],4],[17,4],[87,4],[79,4],[115,4],[120,4],[120,4],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[15,110],121],[[15,110],121],[[15,110],[[40,[39]]]],0,[9,15],0,0,0,0,0,0,[[16,16],[[5,[63]]]],[[115,115],[[5,[63]]]],[[46,46],[[5,[63]]]],[[49,49],[[5,[63]]]],[[76,76],[[5,[63]]]],[[116,116],[[5,[63]]]],[[24,24],[[5,[63]]]],[[117,117],[[5,[63]]]],[[118,118],[[5,[63]]]],[[119,119],[[5,[63]]]],[[15,1]],[[15,2]],0,0,0,0,[[15,[14,[[125,[109]]]],[37,[12]]],[[10,[12]]]],0,[[15,76,110],16],0,0,[114,4],0,0,0,0,[[15,3]],0,0,0,0,0,0,0,0,0,0,0,0,[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],0,0,[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],0,0,0,0,0,[[15,16],17],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[15,16],17],0,0,[15,[[40,[39]]]],0,[[15,116,110],16],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[15,1]],[15]],"c":[],"p":[[3,"Config"],[4,"WorkMode"],[3,"Env"],[15,"bool"],[4,"Option"],[3,"Namespace"],[3,"Formatter"],[6,"Result"],[15,"str"],[4,"Result"],[6,"NsId"],[3,"String"],[8,"Into"],[15,"slice"],[3,"Library"],[3,"TypeId"],[4,"Type"],[3,"TypeId"],[3,"Analysis"],[8,"Fn"],[8,"Copy"],[3,"Info"],[3,"Bounds"],[3,"Function"],[3,"CParameter"],[4,"Concurrency"],[4,"BoundType"],[3,"Bound"],[3,"CallbackInfo"],[3,"PropertyBound"],[3,"Iter"],[15,"char"],[3,"Imports"],[6,"ChildProperties"],[3,"ChildProperty"],[3,"Property"],[3,"Vec"],[3,"Info"],[8,"Iterator"],[3,"Box"],[3,"Constant"],[8,"Borrow"],[3,"Info"],[4,"ConversionType"],[3,"Info"],[3,"Enumeration"],[6,"Result"],[3,"Info"],[3,"Bitfield"],[3,"Parameter"],[3,"Parameters"],[3,"Parameter"],[3,"RustParameter"],[4,"TransformationType"],[3,"Transformation"],[6,"Signatures"],[3,"AsyncTrampoline"],[3,"AsyncFuture"],[8,"IntoIterator"],[15,"usize"],[3,"StatusedTypeId"],[3,"ImportConditions"],[4,"Ordering"],[3,"ImportsWithDefault"],[3,"IntoIter"],[3,"InfoBase"],[3,"Info"],[3,"Info"],[4,"LocationInObject"],[3,"Info"],[4,"ThrowFunctionReturnStrategy"],[4,"Mode"],[3,"Info"],[3,"Property"],[3,"Info"],[3,"Record"],[4,"RecordType"],[4,"RefMode"],[4,"ParameterDirection"],[3,"RustType"],[8,"FnOnce"],[3,"RustTypeBuilder"],[4,"TypeError"],[8,"ToString"],[15,"never"],[3,"Nullable"],[4,"ParameterScope"],[4,"TryFromGlib"],[4,"SafetyAssertionMode"],[3,"Signal"],[3,"Info"],[3,"Signature"],[3,"Infos"],[4,"Type"],[3,"TraitInfo"],[4,"FunctionType"],[3,"FunctionInfo"],[3,"BTreeMap"],[3,"Info"],[3,"Symbol"],[3,"Parameters"],[3,"RustParameter"],[3,"CParameter"],[3,"Transformation"],[4,"TransformationType"],[4,"Transfer"],[3,"Trampoline"],[4,"Cow"],[3,"Path"],[15,"u16"],[3,"Mandatory"],[3,"Infallible"],[4,"FunctionKind"],[4,"Basic"],[3,"Alias"],[3,"Union"],[3,"Interface"],[3,"Class"],[3,"Custom"],[3,"Field"],[3,"Namespace"],[3,"Member"],[4,"ErrorDomain"],[8,"Hasher"],[8,"AsRef"],[13,"Result"],[13,"Length"],[13,"ToGlibPointer"],[13,"ToGlibDirect"],[13,"ToGlibScalar"],[13,"ToGlibUnknown"],[13,"Result"],[13,"ResultInfallible"],[8,"DerivesCopy"],[8,"ImplementsDebug"],[8,"IsExternal"],[8,"IsIncomplete"],[8,"IsPtr"],[8,"IsVolatile"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
