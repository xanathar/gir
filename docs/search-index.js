var searchIndex = JSON.parse('{\
"gir":{"doc":"","t":[13,13,8,4,10,11,11,5,11,11,5,5,5,11,11,11,12,12],"n":["CheckGirFile","Config","OptionStr","RunKind","as_str_ref","borrow","borrow_mut","build_config","from","into","main","print_usage","run_check","try_from","try_into","type_id","0","0"],"q":["gir","","","","","","","","","","","","","","","","gir::RunKind",""],"d":["","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","",""],"i":[3,3,0,0,8,3,3,0,3,3,0,0,0,3,3,3,9,10],"f":[0,0,0,0,[[],[[2,[1]]]],[[]],[[]],[[],[[5,[3,4]]]],[[]],[[]],[[],[[5,[4]]]],[[1,6]],[1,[[5,[4]]]],[[],5],[[],5],[[],7],0,0],"p":[[15,"str"],[4,"Option"],[4,"RunKind"],[3,"String"],[4,"Result"],[3,"Options"],[3,"TypeId"],[8,"OptionStr"],[13,"Config"],[13,"CheckGirFile"]]},\
"libgir":{"doc":"","t":[3,13,13,3,2,13,13,4,0,12,2,12,11,11,11,11,11,11,11,12,2,11,11,5,12,12,11,12,12,12,12,11,11,12,12,12,11,11,0,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,12,0,12,11,12,12,11,12,12,11,12,2,11,12,11,12,12,12,12,2,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,0,12,12,3,2,11,11,0,0,0,0,0,0,12,0,11,12,12,0,0,11,11,11,11,11,0,12,12,11,11,0,0,0,12,0,0,11,5,0,0,12,0,0,0,0,12,0,0,5,0,0,0,0,0,0,0,0,0,11,0,11,11,0,13,3,4,3,3,13,13,3,11,11,12,12,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,12,5,5,5,6,3,5,11,11,12,12,12,11,11,12,11,11,12,12,11,12,12,12,12,12,12,11,11,11,12,11,5,3,11,11,11,11,11,5,11,11,11,11,11,3,5,11,11,12,12,11,11,12,11,12,11,11,12,11,12,13,4,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,3,11,11,11,11,11,12,12,11,12,5,12,11,11,11,11,12,12,5,5,3,11,11,11,11,11,12,12,11,12,5,12,11,11,11,11,12,12,3,13,13,3,3,3,13,13,13,13,13,13,3,4,5,11,5,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,12,11,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,12,12,11,11,11,11,11,11,12,12,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,3,3,5,12,12,12,12,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,12,12,12,12,12,11,12,12,12,12,5,5,12,5,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,5,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,11,11,12,12,11,11,12,11,11,11,11,11,11,11,11,11,12,12,12,12,3,11,11,11,11,11,11,11,12,12,11,11,11,11,12,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,3,11,11,12,12,11,11,12,11,11,12,11,12,12,11,11,12,12,11,11,11,12,12,12,17,3,17,3,6,11,11,11,11,12,11,11,11,11,12,12,11,11,11,12,11,12,12,5,12,12,12,11,11,11,11,11,11,12,13,13,13,13,3,4,12,11,11,11,11,12,12,12,12,12,5,11,11,11,11,11,11,12,11,11,11,11,11,11,12,12,11,5,12,12,11,5,11,11,12,12,11,11,12,12,12,11,12,12,12,11,12,11,11,11,11,11,11,12,13,13,3,4,13,13,13,13,4,13,13,5,5,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,5,12,3,5,11,11,12,12,11,11,12,12,12,5,11,12,12,12,12,12,11,11,12,11,12,12,3,12,11,11,12,12,12,11,11,12,11,11,12,12,11,12,5,11,11,11,11,13,13,4,13,11,11,11,11,11,11,11,11,11,11,13,13,13,13,13,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,5,12,12,11,11,11,11,12,11,11,11,11,12,12,11,11,11,11,13,13,6,3,3,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,13,13,13,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,12,5,11,11,12,12,12,11,11,12,11,12,12,12,11,11,11,12,3,6,11,11,11,11,11,11,11,11,11,11,11,13,13,13,13,13,3,4,13,3,13,13,3,4,13,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,5,12,12,5,5,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,13,3,13,3,3,3,4,13,5,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,12,12,12,11,12,11,12,12,12,11,11,11,11,11,12,12,12,11,11,11,11,11,12,11,11,11,11,11,12,12,12,11,11,11,11,11,3,6,5,11,11,12,12,11,11,12,12,11,11,12,11,12,12,12,12,12,12,11,11,11,5,11,12,12,12,13,13,13,13,13,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,8,8,8,8,8,8,10,10,10,10,10,10,5,5,12,12,12,3,13,13,13,4,13,3,13,13,13,13,13,13,3,13,4,3,13,13,3,13,13,3,13,4,3,13,13,13,13,3,13,13,13,4,13,13,17,17,13,13,3,13,13,13,13,13,13,3,13,3,13,13,17,3,3,13,3,13,13,13,13,13,13,3,13,13,3,4,4,13,3,13,13,3,13,13,13,13,13,13,13,3,13,4,4,13,3,13,13,13,13,13,13,13,13,13,13,3,13,13,13,13,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,12,12,11,12,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,11,11,11,11,12,12,12,12,12,12,12,12,11,11,11,11,11,11,12,12,12,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,12,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,12,11,12,11,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,5,5],"n":["Config","DisplayNotBound","Doc","Env","Library","Normal","Sys","WorkMode","analysis","analysis","analysis_run","auto_path","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","check_disable_format","class_hierarchy","class_hierarchy_run","clone","clone_into","codegen_generate","concurrency","config","default","deprecate_by_min_version","disable_format","doc_target_path","docs_rs_features","eq","equivalent","external_libraries","extra_versions","feature_dependencies","filter_version","find_ext_library","fmt","fmt","fmt","fmt","from","from","from","from_str","generate_display_trait","generate_safety_asserts","girs_dirs","girs_version","into","into","into","is_generate_rust_files","is_normal","is_too_low_version","is_totally_deprecated","lib_version_overrides","library","library","library_full_name","library_name","library_version","main_sys_crate_name","make_backup","min_cfg_version","min_required_version","namespaces","namespaces_run","new","objects","resolve_type_ids","show_statistics","single_version_file","split_build_rs","symbols","symbols_run","sys_crate_import","target_path","to_owned","trust_return_value_nullability","try_from","try_from","try_from","try_into","try_into","try_into","type_","type_id","type_id","type_id","type_status","type_status_sys","update_version","use_gi_docgen","work_mode","Analysis","Parameter","borrow","borrow_mut","bounds","c_type","child_properties","class_builder","class_hierarchy","constants","constants","conversion_type","default","enum_imports","enumerations","enums","ffi_type","find_enum_by_function","find_flag_by_function","find_global_function","find_object_by_function","find_record_by_function","flags","flags","flags_imports","fmt","from","function_parameters","functions","general","global_functions","imports","info_base","into","is_gpointer","namespaces","object","objects","out_parameters","properties","record","record_type","records","ref_mode","return_value","run","rust_type","safety_assertion_mode","signals","signatures","special_functions","supertypes","symbols","trampoline_parameters","trampolines","try_from","try_from_glib","try_into","type_id","types","AsRef","Bound","BoundType","Bounds","CallbackInfo","IsA","NoWrapper","PropertyBound","add_for_parameter","add_parameter","alias","alias","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bound_name","bound_type","callback_modified","callback_type","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","default","eq","eq","equivalent","equivalent","error_parameters","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","get","get_parameter_bound","get_to_glib_extra","has_alias","into","into","into","into","into","is_empty","iter","iter_lifetimes","need_isa","parameter_name","success_parameters","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_for","type_id","type_id","type_id","type_id","type_id","type_str","type_str","update_imports","0","0","implements_c_type","is_mut_ptr","rustify_pointers","ChildProperties","ChildProperty","analyze","borrow","borrow_mut","bounds","child_name","child_type","clone","clone_into","doc_hidden","fmt","from","get_out_ref_mode","getter_name","into","name","nullable","prop_name","set_in_ref_mode","set_params","to_glib_extra","to_owned","try_from","try_into","typ","type_id","analyze","Info","borrow","borrow_mut","fmt","from","into","run","subtypes","supertypes","try_from","try_into","type_id","Info","analyze","borrow","borrow_mut","cfg_condition","deprecated_version","fmt","from","glib_name","into","name","try_from","try_into","typ","type_id","version","Borrow","ConversionType","Direct","Option","Pointer","Result","Scalar","Unknown","borrow","borrow_mut","can_use_to_generate","clone","clone_into","default","eq","equivalent","fmt","from","into","of","to_owned","try_from","try_into","type_id","err_type","ok_type","Info","borrow","borrow_mut","default","fmt","from","full_name","functions","into","name","new","specials","try_from","try_into","type_","type_id","type_id","visibility","ffi_type","used_ffi_type","Info","borrow","borrow_mut","default","fmt","from","full_name","functions","into","name","new","specials","try_from","try_into","type_","type_id","type_id","visibility","CParameter","IntoRaw","Length","Parameter","Parameters","RustParameter","ToGlibBorrow","ToGlibDirect","ToGlibPointer","ToGlibScalar","ToGlibUnknown","ToSome","Transformation","TransformationType","analyze","analyze_return","async_param_to_remove","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_parameters","c_type","caller_allocates","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","destroy_index","direction","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_parameter","from_return_value","ind_c","ind_c","ind_rust","instance_parameter","into","into","into","into","into","into","is_error","is_to_glib","lib_par","move_","name","name","nullable","ref_mode","rust_parameters","scope","set_to_glib_extra","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","transfer","transformation_type","transformations","try_from","try_from","try_from","try_from","try_from","try_from","try_from_glib","try_from_glib","try_into","try_into","try_into","try_into","try_into","try_into","typ","typ","type_id","type_id","type_id","type_id","type_id","type_id","user_data_index","0","0","array_length_name","array_length_type","array_name","explicit_target_type","in_trait","instance_parameter","move_","name","name","name","name","needs_into","nullable","nullable","pointer_cast","ref_mode","to_glib_extra","transfer","AsyncFuture","AsyncTrampoline","Info","analyze","assertion","assertion","async","async_future","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bound_name","bounds","callback_type","callbacks","cfg_condition","clone","clone","clone_into","clone_into","codegen_name","commented","deprecated_version","destroys","doc_hidden","doc_ignore_parameters","doc_link","doc_struct_name","doc_trait_name","error_parameters","ffi_ret","find_function","find_index_to_ignore","finish_func_name","finish_function_name","fmt","fmt","fmt","from","from","from","func_name","generate_doc","glib_name","has_error_parameter","hidden","into","into","into","is_async_finish","is_carray_with_direct_elements","is_method","is_method","is_special","kind","name","name","name","new_name","not_version","ns_id","output_params","outs","parameters","remove_params","ret","should_be_doc_linked","should_docs_be_generated","status","success_parameters","to_owned","to_owned","trampoline","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","type_name","unsafe_","version","visibility","StatusedTypeId","borrow","borrow_mut","clone","clone_into","fmt","from","into","name","status","to_owned","try_from","try_into","type_id","type_id","ImportConditions","Imports","ImportsWithDefault","add","add_defined","add_used_type","add_used_type_with_version","add_used_types","add_with_constraint","add_with_version","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","constraints","default","default","deref","deref_mut","drop","eq","equivalent","fmt","fmt","from","from","from","into","into","into","iter","new","partial_cmp","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","with_defaults","with_defined","InfoBase","borrow","borrow_mut","cfg_condition","concurrency","constructors","default","deprecated_version","fmt","from","full_name","functions","functions","imports","into","methods","name","specials","try_from","try_into","type_id","type_id","version","visibility","INTERNAL","Info","MAIN","Namespace","NsId","borrow","borrow","borrow_mut","borrow_mut","crate_name","fmt","fmt","from","from","glib_ns_id","higher_crate_name","index","into","into","is_glib_crate","main","name","package_names","run","shared_libs","symbol_prefixes","sys_crate_name","try_from","try_from","try_into","try_into","type_id","type_id","versions","Builder","Ext","ExtManual","Impl","Info","LocationInObject","base","borrow","borrow","borrow_mut","borrow_mut","builder_postprocess","builder_properties","c_class_type","c_type","child_properties","class","clone","clone_into","default","deref","eq","equivalent","final_type","fmt","fmt","from","from","function_location","generate_doc_link_info","generate_trait","get_type","has_action_signals","has_builder_properties","has_constructors","has_functions","has_signals","interface","into","into","is_fundamental","is_interface","need_generate_inherent","need_generate_trait","notify_signals","properties","ref_fn","should_generate_impl_block","signals","signatures","supertypes","to_owned","trait_name","try_from","try_from","try_into","try_into","type_id","type_id","unref_fn","CheckError","Combined","Info","Mode","None","Normal","Optional","ReturnResult","ThrowFunctionReturnStrategy","Throws","Void","analyze","analyze_imports","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","can_as_return","clone","clone","clone_into","clone_into","default","default","default","eq","eq","equivalent","equivalent","fmt","fmt","fmt","from","from","from","into","into","into","is_empty","iter","mode","params","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","use_function_return_for_result","0","Property","analyze","borrow","borrow_mut","bounds","deprecated_version","fmt","from","func_name","func_name_alias","get_out_ref_mode","get_property_ref_modes","into","is_get","name","nullable","set_bound","set_in_ref_mode","try_from","try_into","typ","type_id","var_name","version","Info","base","borrow","borrow_mut","boxed_inline","clear_function_expression","copy_into_function_expression","default","deref","derives","fmt","from","glib_get_type","init_function_expression","into","is_boxed","new","try_from","try_into","type_","type_id","AutoBoxed","Boxed","RecordType","Refcounted","borrow","borrow_mut","eq","equivalent","from","into","of","try_from","try_into","type_id","ByRef","ByRefConst","ByRefFake","ByRefImmut","ByRefMut","None","RefMode","borrow","borrow_mut","clone","clone_into","eq","equivalent","fmt","from","from_str","into","is_ref","of","to_owned","try_from","try_into","type_id","without_unneeded_mut","Info","analyze","base_tid","bool_return_is_error","borrow","borrow_mut","clone","clone_into","commented","default","fmt","from","into","nullable_return_is_error","parameter","to_owned","try_from","try_into","type_id","Ignored","Mismatch","Result","RustType","RustTypeBuilder","TypeError","Unimplemented","alter_type","as_str","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","builder","callback_parameters_config","clone","clone","clone_into","clone_into","concurrency","default","direction","eq","eq","equivalent","equivalent","fmt","fmt","from","from","from","from","from","into","into","into","into_used_types","nullable","ref_mode","scope","to_owned","to_owned","try_build","try_build_param","try_from","try_from","try_from","try_from_glib","try_into","try_into","try_into","try_new","type_id","type_id","type_id","used_types","0","0","0","InMainThread","None","NotInitialized","SafetyAssertionMode","Skip","borrow","borrow_mut","clone","clone_into","default","eq","equivalent","fmt","from","from_str","into","is_none","of","to_owned","try_from","try_into","type_id","Info","action_emit_name","analyze","borrow","borrow_mut","connect_name","deprecated_version","doc_hidden","fmt","from","generate_doc","into","is_detailed","signal_name","trampoline","try_from","try_into","type_id","version","Signature","Signatures","borrow","borrow_mut","fmt","from","has_for_property","has_in_deps","into","new","try_from","try_into","type_id","Compare","Copy","Display","Equal","Free","FunctionInfo","FunctionType","Hash","Infos","Ref","StaticStringify","TraitInfo","Type","Unref","analyze_imports","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","default","eq","eq","equivalent","equivalent","extract","first_parameter_mut","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_str","functions","glib_name","has_trait","into","into","into","into","into","partial_cmp","partial_cmp","to_owned","to_owned","to_owned","to_owned","traits","traits_mut","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_","type_id","type_id","type_id","type_id","type_id","unhide","version","version","analyze","dependencies","Info","Symbol","borrow","borrow","borrow_mut","borrow_mut","by_c_name","by_c_name_mut","by_tid","clone","clone_into","crate_name","default","fmt","fmt","from","from","full_rust_name","into","into","is_rust_prelude","make_trait","make_trait_method","name","owner_name","parent","run","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Borrow","CParameter","None","Parameters","RustParameter","Transformation","TransformationType","TreePath","analyze","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_parameters","c_type","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","conversion_type","default","direction","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_str","get","ind_c","ind_rust","into","into","into","into","into","is_real_gpointer","name","name","name","new","nullable","prepare_transformation","ref_mode","ref_mode","rust_parameters","to_owned","to_owned","to_owned","to_owned","to_owned","transfer","transformation","transformations","try_from","try_from","try_from","try_from","try_from","try_from_glib","try_into","try_into","try_into","try_into","try_into","typ","typ","typ","type_id","type_id","type_id","type_id","type_id","Trampoline","Trampolines","analyze","borrow","borrow_mut","bound_name","bounds","clone","clone_into","concurrency","destroy_index","fmt","from","inhibit","into","is_notify","name","nullable","parameters","ret","scope","to_owned","try_from","try_into","type_error","type_id","type_name","user_data_index","version","Default","NotImplemented","Option","OptionMandatory","Result","ResultInfallible","TryFromGlib","borrow","borrow_mut","clone","clone_into","default","fmt","from","from_parameter","from_return_value","from_type_defaults","into","or_type_defaults","to_owned","try_from","try_into","type_id","err_type","ok_type","ok_type","DerivesCopy","ImplementsDebug","IsExternal","IsIncomplete","IsPtr","IsVolatile","derives_copy","implements_debug","is_external","is_incomplete","is_ptr","is_volatile","check_fmt","format","0","0","0","Alias","Alias","Array","Async","Basic","Basic","Bitfield","Bitfield","Bool","Boolean","CArray","Call","Char","Class","Class","Concurrency","Constant","Constructor","Container","Custom","Custom","Double","Enumeration","Enumeration","ErrorDomain","Field","Filename","FixedArray","Float","Full","Function","Function","Function","Function","FunctionKind","Global","HashTable","INTERNAL_NAMESPACE","INTERNAL_NAMESPACE_NAME","In","InOut","Infallible","Int","Int16","Int32","Int64","Int8","IntPtr","Interface","Interface","Library","List","Long","MAIN_NAMESPACE","Mandatory","Member","Method","Namespace","None","None","None","None","None","Notified","Nullable","OsString","Out","Parameter","ParameterDirection","ParameterScope","Pointer","Property","PtrArray","Quark","Record","Record","Return","SList","SSize","Send","SendSync","Short","Signal","Size","Transfer","Type","Type","TypeId","UChar","UInt","UInt16","UInt32","UInt64","UInt8","UIntPtr","ULong","UShort","UniChar","Union","Union","Unsupported","Utf8","VarArgs","add_constant","add_function","add_glib_priority","add_namespace","add_type","array_length","array_length","bits","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_array","c_class_type","c_class_type","c_identifier","c_identifier","c_identifier","c_identifier","c_includes","c_type","c_type","c_type","c_type","c_type","c_type","c_type","c_type","c_type","c_type","caller_allocates","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","closure","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","constants","construct","construct_only","container","conversion_type","default","default","default","default","default","default","default","default","default","default","deprecated_version","deprecated_version","deprecated_version","deprecated_version","deprecated_version","deprecated_version","deprecated_version","deprecated_version","deprecated_version","deprecated_version","deref","deref","deref","deref_mut","derives_copy","derives_copy","derives_copy","derives_copy","derives_copy","derives_copy","derives_copy","derives_copy","derives_copy","destroy","direction","disguised","doc","doc","doc","doc","doc","doc","doc","doc","doc","doc","doc","doc","doc","doc","doc","doc_deprecated","doc_deprecated","doc_deprecated","doc_deprecated","doc_deprecated","doc_deprecated","doc_deprecated","doc_deprecated","doc_deprecated","doc_deprecated","doc_deprecated","doc_deprecated","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","error_domain","fields","fields","fields","final_type","find_c_array","find_namespace","find_or_stub_type","find_type","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_str","from_str","from_str","from_str","from_str","full_name","function","functions","functions","functions","functions","functions","functions","functions","functions","get_deprecated_version","get_glib_name","get_inner_type","get_name","glib_get_type","glib_get_type","glib_get_type","glib_get_type","glib_get_type","glib_get_type","glib_name_index","gtype_struct_for","has_copy","has_destroy","has_free","has_ref","has_unref","hash","id","identifier_prefixes","implements","implements_debug","index","index","instance_parameter","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_abstract","is_abstract","is_action","is_async","is_basic","is_basic_type","is_basic_type","is_bitfield","is_call","is_class","is_crate","is_detailed","is_enumeration","is_error","is_external","is_external","is_external","is_external","is_external","is_final_type","is_function","is_fundamental","is_fundamental","is_glib_crate","is_in","is_incomplete","is_incomplete","is_incomplete","is_incomplete","is_incomplete","is_incomplete","is_incomplete","is_incomplete","is_incomplete","is_interface","is_out","is_ptr","is_ptr","is_volatile","kind","members","members","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","namespace","namespace_mut","namespace_types","namespaces","new","ns_id","nullable","package_names","parameters","parameters","parent","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","postprocessing","preprocessing","prerequisites","private","properties","properties","read_file","readable","record","ref_fn","register_version","requires_conversion","ret","ret","scope","shared_library","show_non_bound_types","signals","signals","status","symbol_prefix","symbol_prefix","symbol_prefix","symbol_prefix","symbol_prefix","symbol_prefix","symbol_prefixes","target_c_type","throws","tid_bool","tid_c_bool","tid_filename","tid_none","tid_os_string","tid_uint32","tid_utf8","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","transfer","transfer","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","typ","typ","typ","typ","typ","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_mut","type_struct","type_struct","types","types","union","unref_fn","value","value","version","version","version","version","version","version","version","version","version","version","versions","visit_functions_mut","visit_functions_mut","writable","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","1","1","2","apply_config","check_function_real_version"],"q":["libgir","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","libgir::analysis","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","libgir::analysis::bounds","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","libgir::analysis::bounds::BoundType","","libgir::analysis::c_type","","","libgir::analysis::child_properties","","","","","","","","","","","","","","","","","","","","","","","","","","","libgir::analysis::class_builder","libgir::analysis::class_hierarchy","","","","","","","","","","","","libgir::analysis::constants","","","","","","","","","","","","","","","","libgir::analysis::conversion_type","","","","","","","","","","","","","","","","","","","","","","","","libgir::analysis::conversion_type::ConversionType","","libgir::analysis::enums","","","","","","","","","","","","","","","","","","libgir::analysis::ffi_type","","libgir::analysis::flags","","","","","","","","","","","","","","","","","","libgir::analysis::function_parameters","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","libgir::analysis::function_parameters::TransformationType","","","","","","","","","","","","","","","","","","","","libgir::analysis::functions","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","libgir::analysis::general","","","","","","","","","","","","","","","libgir::analysis::imports","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","libgir::analysis::info_base","","","","","","","","","","","","","","","","","","","","","","","","libgir::analysis::namespaces","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","libgir::analysis::object","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","libgir::analysis::out_parameters","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","libgir::analysis::out_parameters::Mode","libgir::analysis::properties","","","","","","","","","","","","","","","","","","","","","","","","libgir::analysis::record","","","","","","","","","","","","","","","","","","","","","libgir::analysis::record_type","","","","","","","","","","","","","","libgir::analysis::ref_mode","","","","","","","","","","","","","","","","","","","","","","","","libgir::analysis::return_value","","","","","","","","","","","","","","","","","","","libgir::analysis::rust_type","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","libgir::analysis::rust_type::TypeError","","","libgir::analysis::safety_assertion_mode","","","","","","","","","","","","","","","","","","","","","","libgir::analysis::signals","","","","","","","","","","","","","","","","","","","libgir::analysis::signatures","","","","","","","","","","","","","libgir::analysis::special_functions","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","libgir::analysis::supertypes","","libgir::analysis::symbols","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","libgir::analysis::trampoline_parameters","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","libgir::analysis::trampolines","","","","","","","","","","","","","","","","","","","","","","","","","","","","","libgir::analysis::try_from_glib","","","","","","","","","","","","","","","","","","","","","","","libgir::analysis::try_from_glib::TryFromGlib","","","libgir::analysis::types","","","","","","","","","","","","libgir::fmt","","libgir::librarylibgir::library::ErrorDomain","","libgir::library::Type","","","","","","","","","","","","","","","","","","","","libgir::update_version",""],"d":["","","","","","","","","","","","Path where files generated in normal and sys mode","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Helper to get the ffi crate import","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Bound does not have an alias when <code>param: impl type_str</code> is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","Coded without conversion.","Type implementing TryFromGlib&lt;Error=GlibNoneError&gt;.","Coded with from_glib_xxx.","Type implementing TryFromGlib where Err is neither …","Coded with from_glib.","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Index of the destroy notification parameter associated …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Index of the user data parameter associated with the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether the function can’t be generated","","","","","","","","","","","","","Given async function name tries to guess the name of …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Whether the function is hidden (an implementation detail) …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","In order to generate docs links we need to know in which …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","Provides assistance in generating use declarations.","","Declares that name should be available through its last …","Declares that <code>name</code> is defined in scope","Declares that name should be available through its full …","Declares that name should be available through its full …","","Declares that name should be available through its last …","Declares that name should be available through its last …","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","TODO: return iterator","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","The location of an item within the object","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the location of the function within this object","Generate doc name based on function location within this …","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Specific to fundamental types","Whether we should generate an impl block for this object …","","","","","","","","","","","","Specific to fundamental types","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","Boxed record that use g_boxed_copy, g_boxed_free. Must …","Boxed record with custom copy/free functions","","Referencecounted record","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","A <code>RustType</code> definition and its associated types to be <code>use</code>d.","","","","","","","","","","","","Create a <code>RustTypeBuilder</code> which allows specifying additional","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Try building the <code>RustType</code> with no specific additional …","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Convert this symbol into a trait","Convert this into a method of a trait","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","This field is used to give the type name when generating …","It’s used to group callbacks","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","Checks if given type derives Copy trait.","Checks if given type implements Debug trait.","Checks if type is external aka opaque type.","Checks if given type is incomplete, i.e., its size is …","Checks if given type is some kind of pointer.","Checks if given type has volatile qualifier.","","","","","","","Check if <code>cargo fmt</code> available","Run <code>cargo fmt</code> on path","","","","","","","Used for the duration of the asynchronous call.","","","","","","","","Used only for the duration of the call.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parameter is not of callback type.","","","Used until notified with associated destroy notify …","","","","","","Annotation describing lifetime requirements / guarantees …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","C headers, relative to include directories provided by …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Index of the user data parameter associated with the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Index of the destroy notification parameter associated …","","A ‘disguised’ record is one where the c:type is a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","If the type is an Alias containing a basic, it’ll return …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Types from a single namespace in alphabetical order.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Specific to fundamental types","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,2,2,0,0,2,2,0,0,3,0,1,1,2,3,1,2,3,1,3,0,2,2,0,1,3,2,1,1,1,1,2,2,1,1,1,1,1,0,1,2,3,1,2,3,2,1,1,1,1,1,2,3,2,2,3,3,1,0,3,1,1,1,3,1,1,1,3,0,1,1,1,1,1,1,3,0,3,1,2,1,1,2,3,1,2,3,3,1,2,3,3,3,0,1,1,0,0,17,17,0,0,0,0,0,0,17,0,17,17,17,0,0,17,17,17,17,17,0,17,17,17,17,0,0,0,17,0,0,17,0,0,0,17,0,0,0,0,17,0,0,0,0,0,0,0,0,0,0,0,0,17,0,17,17,0,25,0,0,0,0,25,25,0,21,21,26,28,25,26,21,27,28,25,26,21,27,28,27,26,26,27,25,26,21,27,28,25,26,21,27,28,21,25,26,25,26,27,25,26,21,27,28,25,26,21,27,28,28,21,21,25,25,26,21,27,28,21,21,21,25,26,27,25,26,21,27,28,25,26,21,27,28,25,26,21,27,28,21,25,26,21,27,28,26,28,21,121,122,0,0,0,0,0,0,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,0,0,35,35,35,35,35,0,35,35,35,35,35,0,0,38,38,38,38,38,38,38,38,38,38,38,38,38,38,39,0,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,123,123,0,40,40,40,40,40,40,40,40,40,0,40,40,40,40,40,40,40,0,0,0,43,43,43,43,43,43,43,43,43,0,43,43,43,43,43,43,43,0,48,48,0,0,0,48,48,48,48,48,48,0,0,0,45,0,46,47,23,48,49,45,46,47,23,48,49,45,45,23,23,46,47,23,48,49,45,46,47,23,48,49,45,45,23,23,46,47,23,48,49,45,46,47,23,48,49,45,46,46,47,49,49,23,46,47,23,48,49,45,23,48,46,23,47,23,23,23,45,23,48,46,47,23,48,49,45,23,49,45,46,47,23,48,49,45,46,23,46,47,23,48,49,45,47,23,46,47,23,48,49,45,23,124,125,126,126,126,127,127,127,127,128,129,127,130,129,129,127,127,127,127,127,0,0,0,0,53,20,20,20,52,53,20,52,53,20,52,20,52,20,20,52,53,52,53,20,20,20,20,20,20,20,20,20,53,52,0,0,52,0,52,53,20,52,53,20,20,20,20,52,20,52,53,20,20,0,52,53,20,20,52,53,20,20,20,20,52,20,20,20,20,20,20,20,53,52,53,20,52,53,20,52,53,20,52,53,20,20,20,20,20,0,56,56,56,56,56,56,56,56,56,56,56,56,56,56,0,0,0,31,31,31,31,31,31,31,59,31,57,59,31,57,31,57,31,57,57,57,31,57,59,59,59,57,57,31,57,59,31,57,59,31,57,31,31,57,31,57,59,31,57,59,31,57,59,31,57,57,31,31,0,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,0,0,0,0,0,6,62,6,62,6,6,62,6,62,62,6,62,6,62,62,62,6,6,0,6,6,6,6,62,6,62,6,62,6,64,64,64,64,0,0,63,64,63,64,63,63,63,63,63,63,0,64,64,63,63,64,64,63,64,63,64,63,63,63,63,63,63,0,63,63,63,0,64,63,63,63,63,63,63,63,63,63,63,63,63,64,63,64,63,64,63,64,63,63,66,67,0,0,67,67,67,66,0,67,66,0,0,66,67,68,66,67,68,0,66,67,66,67,66,67,68,66,67,66,67,66,67,68,66,67,68,66,67,68,68,68,68,68,66,67,66,67,68,66,67,68,66,67,68,0,131,0,0,69,69,69,69,69,69,69,69,69,0,69,69,69,69,69,69,69,69,69,69,69,69,0,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,0,71,71,71,71,73,73,0,73,73,73,73,73,73,73,73,73,73,73,74,74,74,74,74,74,0,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,0,0,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,79,79,0,0,0,0,79,76,76,78,79,76,78,79,76,76,78,79,76,79,76,78,76,78,79,76,79,76,79,76,78,79,76,76,76,78,79,76,76,78,78,78,79,76,78,78,78,79,76,78,78,79,76,76,78,79,76,76,132,133,134,85,85,85,0,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,0,86,0,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,0,0,87,87,87,87,87,87,87,87,87,87,87,89,89,89,89,89,0,0,89,0,89,91,0,0,89,0,89,90,91,92,88,89,90,91,92,88,89,90,91,92,89,90,91,92,89,91,88,89,91,89,91,0,90,89,90,91,92,88,89,90,91,92,88,89,88,90,88,89,90,91,92,88,89,91,89,90,91,92,88,88,89,90,91,92,88,89,90,91,92,88,92,89,90,91,92,88,0,90,92,0,0,0,0,95,94,95,94,94,94,94,95,95,95,95,95,94,95,94,95,95,94,95,95,95,95,95,95,0,95,95,94,95,94,95,94,100,0,100,0,0,0,0,100,0,97,98,99,96,100,97,98,99,96,100,96,98,97,98,99,96,100,97,98,99,96,100,99,96,97,97,98,99,96,100,97,98,99,96,100,100,96,99,99,97,98,99,96,100,98,97,98,99,96,97,96,97,99,96,97,98,99,96,100,99,99,96,97,98,99,96,100,97,97,98,99,96,100,97,98,99,97,98,99,96,100,0,0,0,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,0,103,103,103,103,84,84,84,84,84,84,0,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,135,135,136,0,0,0,0,0,0,137,138,139,140,141,142,0,0,82,108,109,0,15,15,83,0,15,0,15,111,111,15,83,111,0,15,0,0,110,101,0,15,111,0,15,0,0,111,15,111,101,0,110,120,15,0,110,15,0,0,75,75,0,111,111,111,111,111,111,0,15,0,15,111,0,0,0,110,0,101,75,83,24,111,83,0,111,75,0,0,0,111,0,15,120,0,15,75,15,111,24,24,111,0,111,0,0,111,0,111,111,111,111,111,111,111,111,111,111,0,15,111,111,111,13,13,13,13,13,117,50,117,101,75,83,82,108,109,110,24,111,14,112,107,119,120,41,44,72,117,113,70,50,22,102,114,115,116,15,118,13,101,75,83,82,108,109,110,24,111,14,112,107,119,120,41,44,72,117,113,70,50,22,102,114,115,116,15,118,13,15,114,115,112,107,119,22,118,107,41,44,72,117,113,70,50,114,115,50,101,75,83,82,108,109,110,24,111,14,50,101,75,83,82,108,109,110,24,111,14,50,50,14,112,41,44,72,113,22,114,115,116,118,70,70,15,116,75,83,24,14,72,117,113,114,115,118,107,119,41,44,72,70,22,102,114,115,82,108,109,82,111,14,112,72,117,113,22,115,15,50,50,72,112,107,119,41,44,72,117,113,70,50,22,102,114,115,118,112,107,119,41,44,72,70,22,102,114,115,118,101,75,83,82,108,109,110,24,111,14,112,41,44,72,113,22,114,115,116,15,101,75,83,82,108,109,110,24,111,14,112,41,44,72,113,22,114,115,116,15,41,72,113,115,115,15,13,13,13,101,75,83,82,108,109,110,24,111,14,112,107,119,120,41,44,72,117,113,70,50,22,102,114,115,116,15,15,118,13,101,75,83,82,108,109,110,24,111,14,112,107,119,120,41,44,72,117,113,70,50,22,102,114,115,116,15,118,13,101,75,83,110,24,14,15,15,41,44,72,113,114,115,118,15,15,15,15,41,44,72,113,114,115,118,72,72,72,72,72,72,14,14,118,115,117,118,13,50,101,75,83,82,108,109,110,24,111,14,112,107,119,120,41,44,72,117,113,70,50,22,102,114,115,116,15,118,13,15,115,102,83,15,14,15,15,83,15,13,102,15,50,112,72,113,115,15,15,15,15,115,13,75,111,14,112,72,117,113,22,115,15,15,75,112,117,117,22,41,44,112,107,119,41,44,72,117,113,70,50,22,102,114,115,116,118,13,13,13,13,13,14,50,118,22,102,115,14,112,41,44,72,113,22,114,115,116,13,13,114,117,114,115,13,70,15,115,13,111,22,102,50,118,13,114,115,119,41,44,72,113,114,115,118,112,22,14,14,14,14,14,14,14,101,75,83,82,108,109,110,24,111,14,50,15,70,50,101,75,83,82,108,109,110,24,111,14,112,107,119,120,41,44,72,117,113,70,50,22,102,114,115,116,15,118,13,101,75,83,82,108,109,110,24,111,14,112,107,119,120,41,44,72,117,113,70,50,22,102,114,115,116,15,118,13,112,107,117,70,50,13,101,75,83,82,108,109,110,24,111,14,112,107,119,120,41,44,72,117,113,70,50,22,102,114,115,116,15,118,13,13,114,115,13,118,15,115,107,119,107,119,41,44,72,70,22,102,114,115,118,15,118,70,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,157,159,157,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[1],0,0,[2,2],[[]],[3],0,0,[[],2],0,0,0,0,[[2,2],4],[[],4],0,0,0,[[1,[5,[0]]],[[5,[0]]]],[[1,6],[[5,[0]]]],0,[[1,7],8],[[2,7],8],[[3,7],8],[[]],[[]],[[]],[9,[[10,[2]]]],0,0,0,0,[[]],[[]],[[]],[2,4],[2,4],[[3,[5,[11]],[5,[0]]],4],[[3,[5,[11]],[5,[0]]],4],0,0,0,[1,12],0,0,[3,9],0,0,[[1,3,[5,[11]]],[[5,[0]]]],0,0,[[4,4,4],[[10,[1,12]]]],0,[[1,13]],0,0,0,0,0,[[3,14],12],0,[[]],0,[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[3,14],15],[[],16],[[],16],[[],16],0,0,0,0,0,0,0,[[]],[[]],0,0,0,0,0,0,0,0,[[],17],0,0,0,0,[[17,3,[0,[18,19]],[0,[18,19]]],5],[[17,3,[0,[18,19]],[0,[18,19]]],5],[[17,3,[0,[18,19]]],[[5,[20]]]],[[17,3,[0,[18,19]],[0,[18,19]]],5],[[17,3,[0,[18,19]],[0,[18,19]]],5],0,0,0,[[17,7],8],[[]],0,0,0,0,0,0,[[]],[9,4],0,0,0,0,0,0,0,0,0,0,[3],0,0,0,0,0,0,0,0,0,[[],10],0,[[],10],[[],16],0,0,0,0,0,0,0,0,0,[[21,3,22,23,4,24]],[[21,9,9,25,4]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[25,25],[26,26],[21,21],[27,27],[28,28],[[]],[[]],[[]],[[]],[[]],[[],21],[[25,25],4],[[26,26],4],[[],4],[[],4],0,[[25,7],8],[[26,7],8],[[21,7],8],[[27,7],8],[[28,7],8],[[]],[[]],[[]],[[]],[[]],[[3,14],[[5,[28]]]],[[21,9],[[5,[26]]]],[[25,4,4,4],12],[25,4],[[]],[[]],[[]],[[]],[[]],[21,4],[21,[[29,[26]]]],[21,[[29,[30]]]],[25,4],0,0,[[]],[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[3,14],[[5,[25]]]],[[],16],[[],16],[[],16],[[],16],[[],16],0,0,[[21,31]],0,0,[[3,14,9],4],[9,4],[9],0,0,[[3,[5,[0]],14,31],32],[[]],[[]],0,0,0,[33,33],[[]],0,[[33,7],8],[[]],0,0,[[]],0,0,0,0,0,0,[[]],[[],10],[[],10],0,[[],16],0,0,[[]],[[]],[[35,7],8],[[]],[[]],[13,35],[[35,14],[[37,[36]]]],[[35,14]],[[],10],[[],10],[[],16],0,0,[[]],[[]],0,0,[[38,7],8],[[]],0,[[]],0,[[],10],[[],10],0,[[],16],0,0,0,0,0,0,0,0,0,[[]],[[]],[39,4],[39,39],[[]],[[],39],[[39,39],4],[[],4],[[39,7],8],[[]],[[]],[[3,14],39],[[]],[[],10],[[],10],[[],16],0,0,0,[[]],[[]],[[],40],[[40,7],8],[[]],0,0,[[]],0,0,0,[[],10],[[],10],[[40,13],41],[[],16],0,0,[[3,14,9],42],[[3,14,9],[[5,[12]]]],0,[[]],[[]],[[],43],[[43,7],8],[[]],0,0,[[]],0,0,0,[[],10],[[],10],[[43,13],44],[[],16],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[3,4,4,4],45],[[45,3,5]],[9,4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[46,46],[47,47],[23,23],[48,48],[49,49],[45,45],[[]],[[]],[[]],[[]],[[]],[[]],[[],45],0,0,[[46,7],8],[[47,7],8],[[23,7],8],[[48,7],8],[[49,7],8],[[45,7],8],[[]],[[]],[[]],[[]],[[]],[[]],[[3,50],46],[[3,50],46],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,[48,4],0,0,0,0,0,0,0,0,[[48,9]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],0,0,[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],0,0,[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[52,52],[53,53],[[]],[[]],[20,9],0,0,0,0,0,[[20,[5,[9]],[5,[9]],4],12],0,0,0,0,[[3,9],[[5,[22]]]],[[54,[5,[50]]],[[5,[55]]]],0,[9,12],[[52,7],8],[[53,7],8],[[20,7],8],[[]],[[]],[[]],0,0,0,0,0,[[]],[[]],[[]],[[20,3],4],[[3,14],4],0,0,[20,4],0,0,0,0,0,0,0,0,0,0,0,0,[[20,3],4],[[20,3],4],0,0,[[]],[[]],0,[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],16],[[],16],[[],16],0,0,0,0,0,[[]],[[]],[56,56],[[]],[[56,7],8],[[]],[[]],0,0,[[]],[[],10],[[],10],[[],16],0,0,0,0,[[31,9]],[[31,9]],[[31,9]],[[31,9,[5,[0]]]],[31],[[31,9,[5,[0]],[5,[9]]]],[[31,9,[5,[0]]]],[[]],[[]],[[]],[[]],[[]],[[]],[31,31],[57,57],[[]],[[]],[[57,57],58],0,[[],31],[[],57],[59],[59],[59],[[57,57],4],[[],4],[[31,7],8],[[57,7],8],[[]],[[]],[[]],[[]],[[]],[[]],[31,60],[13,31],[[57,57],[[5,[58]]]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],16],[[],16],[[],16],0,[[31,[5,[0]],5],59],[[13,9],31],0,[[]],[[]],0,0,[61,[[34,[20]]]],[[],61],0,[[61,7],8],[[]],0,[61,[[34,[20]]]],0,0,[[]],[61,[[34,[20]]]],0,0,[[],10],[[],10],[[],16],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,[[6,7],8],[[62,7],8],[[]],[[]],0,0,[[62,11],6],[[]],[[]],0,[62,6],0,0,[13,62],0,0,0,[[],10],[[],10],[[],10],[[],10],[[],16],[[],16],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,0,0,0,0,0,[64,64],[[]],[[],63],[63,61],[[64,64],4],[[],4],0,[[64,7],8],[[63,7],8],[[]],[[]],[[63,20],64],[[63,20]],0,0,[63,4],[[],4],0,0,[63,4],0,[[]],[[]],0,0,[63,4],[63,4],0,0,0,[63,4],0,0,0,[[]],0,[[],10],[[],10],[[],10],[[],10],[[],16],[[],16],0,0,0,0,0,0,0,0,0,0,0,0,[[3,22,65]],[[3,54,31]],[[]],[[]],[[]],[[]],[[]],[[]],[[3,50],4],[66,66],[67,67],[[]],[[]],[[],66],[[],67],[[],68],[[66,66],4],[[67,67],4],[[],4],[[],4],[[66,7],8],[[67,7],8],[[68,7],8],[[]],[[]],[[]],[[]],[[]],[[]],[68,4],[68,[[29,[46]]]],0,0,[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],16],[[],16],[[],16],[[3,14,9],4],0,0,0,[[]],[[]],0,0,[[69,7],8],[[]],0,0,0,[[3,70]],[[]],0,0,0,0,0,[[],10],[[],10],0,[[],16],0,0,0,0,[[]],[[]],0,0,0,[[],71],[71,61],0,[[71,7],8],[[]],0,0,[[]],0,0,[[],10],[[],10],[[71,13],72],[[],16],0,0,0,0,[[]],[[]],[[73,73],4],[[],4],[[]],[[]],[72,73],[[],10],[[],10],[[],16],0,0,0,0,0,0,0,[[]],[[]],[74,74],[[]],[[74,74],4],[[],4],[[74,7],8],[[]],[9,[[10,[74]]]],[[]],[74,4],[[3,14,75],74],[[]],[[],10],[[],10],[[],16],[[3,50,4,4],74],0,0,0,0,[[]],[[]],[65,65],[[]],0,[[],65],[[65,7],8],[[]],[[]],0,0,[[]],[[],10],[[],10],[[],16],0,0,0,0,0,0,0,[[76,77],76],[76,9],[[]],[[]],[[]],[[]],[[]],[[]],[[3,14],78],[78,78],[79,79],[76,76],[[]],[[]],[[78,24],78],[[],76],[[78,75],78],[[79,79],4],[[76,76],4],[[],4],[[],4],[[79,7],8],[[76,7],8],[[]],[[]],[80,76],[[]],[81],[[]],[[]],[[]],[76,[[34,[12]]]],[[78,82],78],[[78,74],78],[[78,83],78],[[]],[[]],[78,42],[78,42],[[],10],[[],10],[[],10],[[78,84],78],[[],10],[[],10],[[],10],[[3,14],42],[[],16],[[],16],[[],16],[76,34],0,0,0,0,0,0,0,0,[[]],[[]],[85,85],[[]],[[],85],[[85,85],4],[[],4],[[85,7],8],[[]],[9,[[10,[85,12]]]],[[]],[85,4],[[3,4,45],85],[[]],[[],10],[[],10],[[],16],0,0,0,[[]],[[]],0,0,0,[[86,7],8],[[]],0,[[]],0,0,0,[[],10],[[],10],[[],16],0,0,0,[[]],[[]],[[87,7],8],[[]],[[3,9,4,14,51]],[[87,3,9]],[[]],[22,87],[[],10],[[],10],[[],16],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[88,31]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[89,89],[90,90],[91,91],[92,92],[[]],[[]],[[]],[[]],[[89,89],58],[[91,91],58],[[],88],[[89,89],4],[[91,91],4],[[],4],[[],4],0,0,[[89,7],8],[[90,7],8],[[91,7],8],[[92,7],8],[[88,7],8],[[]],[[]],[[]],[[]],[[]],[9,[[10,[89]]]],[88,93],0,[[88,89],4],[[]],[[]],[[]],[[]],[[]],[[89,89],[[5,[58]]]],[[91,91],[[5,[58]]]],[[]],[[]],[[]],[[]],[88,93],[88,93],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],0,[[],16],[[],16],[[],16],[[],16],[[],16],[[88,89]],0,0,[[3,14,[5,[0]],31],[[34,[56]]]],[[3,14],[[34,[14]]]],0,0,[[]],[[]],[[]],[[]],[[94,9],[[5,[95]]]],[[94,9],[[5,[95]]]],[[94,14],[[5,[95]]]],[95,95],[[]],[95,[[5,[9]]]],[[],95],[[95,7],8],[[94,7],8],[[]],[[]],[95,12],[[]],[[]],[95,4],[[95,9]],[[95,9]],[95,9],[95,[[5,[9]]]],[95,12],[[13,62],94],[[]],[[],10],[[],10],[[],10],[[],10],[[],16],[[],16],0,0,0,0,0,0,0,0,[[3,14,[5,[34]]],96],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[97,97],[98,98],[99,99],[96,96],[100,100],[[]],[[]],[[]],[[]],[[]],0,[[],96],0,[[97,7],8],[[98,7],8],[[99,7],8],[[96,7],8],[[100,7],8],[[]],[[]],[[]],[[]],[[]],[9,[[10,[100]]]],[[96,55],[[5,[99]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[98,3],4],0,0,0,[55,96],0,[[96,3,14,12,12,75,101,82,74,39],99],0,0,0,[[]],[[]],[[]],[[]],[[]],0,0,0,[[],10],[[],10],[[],10],[[],10],[[],10],0,[[],10],[[],10],[[],10],[[],10],[[],10],0,0,0,[[],16],[[],16],[[],16],[[],16],[[],16],0,0,0,[[]],[[]],0,0,[103,103],[[]],0,0,[[103,7],8],[[]],0,[[]],0,0,0,0,0,0,[[]],[[],10],[[],10],[[3,50],[[5,[9]]]],[[],16],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[84,84],[[]],[[],84],[[84,7],8],[[]],[[3,14],84],[[3,14],84],[[3,14],84],[[]],[[84,3,14],[[104,[84]]]],[[]],[[],10],[[],10],[[],16],0,0,0,0,0,0,0,0,0,[13,4],[13,4],[13,4],[13,4],[[],4],[[],4],[[],4],[105],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[13,106,107]],[[13,106,22]],[[13,2]],[[13,9],106],[[13,106,9,15],14],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[13,14,[5,[106]],[5,[12]]],14],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[101,101],[75,75],[83,83],[82,82],[108,108],[109,109],[110,110],[24,24],[111,111],[14,14],[50,50],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[14,14],58],[[112,112],58],[[41,41],58],[[44,44],58],[[72,72],58],[[113,113],58],[[22,22],58],[[114,114],58],[[115,115],58],[[116,116],58],0,0,0,[[13,9,[34,[14]]],[[5,[14]]]],0,[[],75],[[],83],[[],24],[[],14],[[],72],[[],117],[[],113],[[],114],[[],115],[[],118],0,0,0,0,0,0,0,0,0,0,[82,4],[108,4],[109,4],[82,4],[13,4],[13,4],[13,4],[13,4],[13,4],[13,4],[13,4],[13,4],[13,4],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[101,101],4],[[75,75],4],[[83,83],4],[[82,82],4],[[108,108],4],[[109,109],4],[[110,110],4],[[24,24],4],[[111,111],4],[[14,14],4],[[112,112],4],[[41,41],4],[[44,44],4],[[72,72],4],[[113,113],4],[[22,22],4],[[114,114],4],[[115,115],4],[[116,116],4],[[15,15],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],0,0,0,0,0,[[13,14,[5,[106]]],14],[[13,9],[[5,[106]]]],[[13,106,9],14],[[13,106,9],[[5,[14]]]],[[101,7],8],[[75,7],8],[[83,7],8],[[82,7],8],[[108,7],8],[[109,7],8],[[110,7],8],[[24,7],8],[[111,7],8],[[14,7],8],[[112,7],8],[[107,7],8],[[119,7],8],[[120,7],8],[[41,7],8],[[44,7],8],[[72,7],8],[[117,7],8],[[113,7],8],[[70,7],8],[[50,7],8],[[22,7],8],[[102,7],8],[[114,7],8],[[115,7],8],[[116,7],8],[[15,7],8],[[15,7],8],[[118,7],8],[[13,7],8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[9,[[10,[101,12]]]],[9,[[10,[75,12]]]],[9,[[10,[83,12]]]],[9,[[10,[110,12]]]],[9,[[10,[24,12]]]],[[14,13],12],[[13,22],14],[15],0,0,0,0,0,0,0,[15,[[5,[0]]]],[15,[[5,[9]]]],[[15,3],5],[15,12],0,0,0,0,0,0,0,0,[72,4],[72,4],[72,4],[72,4],[72,4],[14],0,0,0,[[117,13],4],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[15,4],0,0,[83,4],[15,4],[[14,3],4],[[15,3],4],[15,4],[83,4],[15,4],[[13,9],4],0,[15,4],0,[[112,13],4],[[72,13],4],[[113,13],4],[[115,13],4],[[15,13],4],[15,4],[15,4],[15,4],0,[13,4],[75,4],[[111,13],4],[[14,13],4],[[112,13],4],[[72,13],4],[[117,13],4],[[113,13],4],[[22,13],4],[[115,13],4],[[15,13],4],[15,4],[75,4],[112,4],[117,4],[117,4],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[13,106],118],[[13,106],118],[[13,106],[[37,[36]]]],0,[9,13],0,0,0,0,0,0,[[14,14],[[5,[58]]]],[[112,112],[[5,[58]]]],[[41,41],[[5,[58]]]],[[44,44],[[5,[58]]]],[[72,72],[[5,[58]]]],[[113,113],[[5,[58]]]],[[22,22],[[5,[58]]]],[[114,114],[[5,[58]]]],[[115,115],[[5,[58]]]],[[116,116],[[5,[58]]]],[[13,1]],[[13,2]],0,0,0,0,[[13,34],[[10,[12]]]],0,[[13,72,106],14],0,0,[111,4],0,0,0,0,[[13,3]],0,0,0,0,0,0,0,0,0,0,0,0,[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],0,0,[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],0,0,0,0,0,[[13,14],15],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[13,14],15],0,0,[13,[[37,[36]]]],0,[[13,113,106],14],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[15,4],[118,4],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[13,1]],[13]],"p":[[3,"Config"],[4,"WorkMode"],[3,"Env"],[15,"bool"],[4,"Option"],[3,"Namespace"],[3,"Formatter"],[6,"Result"],[15,"str"],[4,"Result"],[6,"NsId"],[3,"String"],[3,"Library"],[3,"TypeId"],[4,"Type"],[3,"TypeId"],[3,"Analysis"],[8,"Fn"],[8,"Copy"],[3,"Info"],[3,"Bounds"],[3,"Function"],[3,"CParameter"],[4,"Concurrency"],[4,"BoundType"],[3,"Bound"],[3,"CallbackInfo"],[3,"PropertyBound"],[3,"Iter"],[15,"char"],[3,"Imports"],[6,"ChildProperties"],[3,"ChildProperty"],[3,"Vec"],[3,"Info"],[8,"Iterator"],[3,"Box"],[3,"Info"],[4,"ConversionType"],[3,"Info"],[3,"Enumeration"],[6,"Result"],[3,"Info"],[3,"Bitfield"],[3,"Parameters"],[3,"Parameter"],[3,"RustParameter"],[4,"TransformationType"],[3,"Transformation"],[3,"Parameter"],[6,"Signatures"],[3,"AsyncTrampoline"],[3,"AsyncFuture"],[8,"IntoIterator"],[15,"usize"],[3,"StatusedTypeId"],[3,"ImportConditions"],[4,"Ordering"],[3,"ImportsWithDefault"],[3,"IntoIter"],[3,"InfoBase"],[3,"Info"],[3,"Info"],[4,"LocationInObject"],[3,"Info"],[4,"ThrowFunctionReturnStrategy"],[4,"Mode"],[3,"Info"],[3,"Property"],[3,"Property"],[3,"Info"],[3,"Record"],[4,"RecordType"],[4,"RefMode"],[4,"ParameterDirection"],[3,"RustType"],[8,"FnOnce"],[3,"RustTypeBuilder"],[4,"TypeError"],[8,"ToString"],[15,"never"],[3,"Nullable"],[4,"ParameterScope"],[4,"TryFromGlib"],[4,"SafetyAssertionMode"],[3,"Info"],[3,"Signature"],[3,"Infos"],[4,"Type"],[3,"TraitInfo"],[4,"FunctionType"],[3,"FunctionInfo"],[3,"BTreeMap"],[3,"Info"],[3,"Symbol"],[3,"Parameters"],[3,"RustParameter"],[3,"CParameter"],[3,"Transformation"],[4,"TransformationType"],[4,"Transfer"],[3,"Signal"],[3,"Trampoline"],[4,"Cow"],[3,"Path"],[15,"u16"],[3,"Constant"],[3,"Mandatory"],[3,"Infallible"],[4,"FunctionKind"],[4,"Basic"],[3,"Alias"],[3,"Union"],[3,"Interface"],[3,"Class"],[3,"Custom"],[3,"Field"],[3,"Namespace"],[3,"Member"],[4,"ErrorDomain"],[13,"IsA"],[13,"AsRef"],[13,"Result"],[13,"IntoRaw"],[13,"ToSome"],[13,"Length"],[13,"ToGlibPointer"],[13,"ToGlibDirect"],[13,"ToGlibScalar"],[13,"ToGlibUnknown"],[13,"Throws"],[13,"Ignored"],[13,"Mismatch"],[13,"Unimplemented"],[13,"Result"],[13,"ResultInfallible"],[8,"DerivesCopy"],[8,"ImplementsDebug"],[8,"IsExternal"],[8,"IsIncomplete"],[8,"IsPtr"],[8,"IsVolatile"],[13,"Quark"],[13,"Function"],[13,"Basic"],[13,"Alias"],[13,"Enumeration"],[13,"Bitfield"],[13,"Record"],[13,"Union"],[13,"Function"],[13,"Interface"],[13,"Class"],[13,"Custom"],[13,"Array"],[13,"CArray"],[13,"FixedArray"],[13,"PtrArray"],[13,"HashTable"],[13,"List"],[13,"SList"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
